@model Application.Common.PagedResult<Application.DTOs.FineBasicDto>
@using Domain.Enums
@{
    ViewData["Title"] = "My Fines";
    var totalPending = ViewBag.TotalPendingFines as decimal?;
    const int maxVisiblePages = 5;
    var fineStatusClasses = new Dictionary<FineStatus, string>
    {
        { FineStatus.Pending, "badge bg-warning text-dark" },
        { FineStatus.Paid, "badge bg-success" },
        { FineStatus.Waived, "badge bg-secondary" }
    };
    var fineStatusLabels = new Dictionary<FineStatus, string>
    {
        { FineStatus.Pending, "Pending" },
        { FineStatus.Paid, "Paid" },
        { FineStatus.Waived, "Waived" }
    };
}

<div class="container-xl py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">@ViewData["Title"]</h2>
        @if (totalPending.HasValue && totalPending.Value > 0)
        {
            <div class="alert alert-warning mb-0 px-4 py-2">
                <strong>Total Pending:</strong>
                <span class="ms-2 badge bg-warning text-dark fs-6">@totalPending.Value.ToString("C")</span>
            </div>
        }
    </div>

    @if (TempData["ErrorMessage"] is string errorMsg)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @errorMsg
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["SuccessMessage"] is string successMsg)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @successMsg
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model?.Items == null || !Model.Items.Any())
    {
        <div class="d-flex justify-content-center align-items-center" style="min-height: 40vh;">
            <div class="card shadow-sm p-4 text-center" style="max-width: 400px;">
                <div class="mb-3">
                    <i class="bi bi-info-circle text-primary" style="font-size: 2.5rem;"></i>
                </div>
                <h5 class="mb-2">No Fines</h5>
                <p class="mb-0 text-muted">You have no fines at this time.</p>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th scope="col">@nameof(Application.DTOs.FineBasicDto.Type)</th>
                            <th scope="col">@nameof(Application.DTOs.FineBasicDto.Description)</th>
                            <th scope="col" class="text-end">@nameof(Application.DTOs.FineBasicDto.Amount)</th>
                            <th scope="col" class="text-center">@nameof(Application.DTOs.FineBasicDto.Status)</th>
                            <th scope="col" class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var fine in Model.Items)
                        {
                            <tr>
                                <td>@fine.Type</td>
                                <td>
                                    <span class="text-truncate d-inline-block" style="max-width: 300px;" title="@fine.Description">
                                        @fine.Description
                                    </span>
                                </td>
                                <td class="text-end">@fine.Amount.ToString("C")</td>
                                <td class="text-center">
                                    @{
                                        var status = fine.Status;
                                        var statusClass = fineStatusClasses.ContainsKey(status)
                                        ? fineStatusClasses[status]
                                        : "badge bg-light text-dark";
                                        var statusLabel = fineStatusLabels.ContainsKey(status)
                                        ? fineStatusLabels[status]
                                        : status.ToString();
                                    }
                                    <span class="@statusClass">@statusLabel</span>
                                </td>
                                <td class="text-end">
                                    <a asp-action="MyFineDetails"
                                       asp-route-id="@fine.Id"
                                       class="btn btn-sm btn-outline-primary"
                                       title="View fine details">
                                        <i class="bi bi-eye me-1"></i>
                                        Details
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        @if (Model.TotalPages > 1)
        {
            var startPage = Math.Max(1, Model.Page - maxVisiblePages / 2);
            var endPage = Math.Min(Model.TotalPages, startPage + maxVisiblePages - 1);
            startPage = Math.Max(1, endPage - maxVisiblePages + 1);

            <nav aria-label="Fine pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.Page <= 1 ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="MyFines"
                           asp-route-page="@(Model.Page - 1)"
                           asp-route-pageSize="@Model.PageSize"
                           tabindex="-1" aria-disabled="@(Model.Page <= 1)">
                            <i class="bi bi-chevron-left"></i>
                            Previous
                        </a>
                    </li>

                    @if (startPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="MyFines" asp-route-page="1" asp-route-pageSize="@Model.PageSize">1</a>
                        </li>
                        @if (startPage > 2)
                        {
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        }
                    }

                    @for (var i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == Model.Page ? "active" : "")">
                            <a class="page-link"
                               asp-action="MyFines"
                               asp-route-page="@i"
                               asp-route-pageSize="@Model.PageSize">@i</a>
                        </li>
                    }

                    @if (endPage < Model.TotalPages)
                    {
                        @if (endPage < Model.TotalPages - 1)
                        {
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        }
                        <li class="page-item">
                            <a class="page-link"
                               asp-action="MyFines"
                               asp-route-page="@Model.TotalPages"
                               asp-route-pageSize="@Model.PageSize">@Model.TotalPages</a>
                        </li>
                    }

                    <li class="page-item @(Model.Page >= Model.TotalPages ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="MyFines"
                           asp-route-page="@(Model.Page + 1)"
                           asp-route-pageSize="@Model.PageSize"
                           aria-disabled="@(Model.Page >= Model.TotalPages)">
                            Next
                            <i class="bi bi-chevron-right"></i>
                        </a>
                    </li>
                </ul>
            </nav>
        }
    }
</div>