@model PagedResult<FineBasicDto>
@using Application.Common
@using Application.DTOs
@using Domain.Enums

@{
    ViewData["Title"] = "My Fines";
    var totalPendingFines = ViewBag.TotalPendingFines as decimal?;

    Func<FineStatus, (string, string)> GetStatusStyles = status => status switch
    {
        FineStatus.Pending => ("Unpaid", "bg-yellow-100 text-yellow-800"),
        FineStatus.Paid => ("Paid", "bg-green-100 text-green-800"),
        FineStatus.Waived => ("Waived", "bg-gray-100 text-gray-700"),
        _ => ("", "bg-gray-100 text-gray-700")
    };
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 text-on-surface">
    <div class="sm:flex sm:items-center sm:justify-between mb-6">
        <div>
            <h1 class="text-3xl font-bold">@ViewData["Title"]</h1>
            <p class="mt-2 text-sm text-on-surface-weak">
                A history of all fines on your account.
            </p>
        </div>
        <a asp-controller="Profile" asp-action="Index" class="mt-4 sm:mt-0 inline-flex items-center justify-center rounded-md border border-outline px-4 py-2 text-sm font-medium shadow-sm hover:bg-white/5">
            ← Back to My Profile
        </a>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="mb-6 p-4 bg-red-100 text-red-800 border border-red-300 rounded-md">@TempData["ErrorMessage"]</div>
    }

    @if (totalPendingFines.HasValue && totalPendingFines.Value > 0)
    {
        <div class="mb-6 p-6 bg-red-500/10 text-red-400 border border-red-500/20 rounded-lg flex flex-col sm:flex-row items-center justify-between gap-4">
            <div>
                <h3 class="text-xl font-semibold text-red-300">Outstanding Balance Due</h3>
                <p class="text-4xl font-bold text-white mt-1">@totalPendingFines.Value.ToString("C")</p>
                <p class="text-sm mt-2 text-red-300/80">Please visit the library front desk to settle your pending fines.</p>
            </div>
            <!-- Trong tương lai, nút thanh toán online có thể được đặt ở đây -->
        </div>
    }
    else
    {
        <div class="mb-6 p-4 bg-green-500/10 text-green-400 border border-green-500/20 rounded-lg">
            <h4 class="font-semibold">All Clear!</h4>
            <p class="text-sm">You have no outstanding fines on your account. Thank you!</p>
        </div>
    }

    <div class="bg-surface-alt rounded-lg shadow overflow-hidden">
        <h2 class="text-lg font-semibold px-6 py-4 border-b border-outline">Fine History</h2>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-outline">
                <thead class="bg-surface">
                    <tr>
                        <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold sm:pl-6">Fine Info</th>
                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold">Amount</th>
                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold">Date Issued</th>
                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold">Status</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-outline">
                    @if (Model != null && Model.Items.Any())
                    {
                        foreach (var fine in Model.Items)
                        {
                            var (statusText, statusClass) = GetStatusStyles(fine.Status);
                            <tr class="@(fine.Status == FineStatus.Pending ? "dark:bg-yellow-500/5" : "")">
                                <td class="py-4 pl-4 pr-3 text-sm sm:pl-6">
                                    <a asp-action="MyFineDetails" asp-controller="Fine" asp-route-id="@fine.Id" class="font-semibold text-primary hover:underline">
                                        #@fine.Id
                                    </a>
                                    <div class="text-xs text-on-surface-weak max-w-xs truncate" title="@fine.Description">
                                        Reason: @fine.Description
                                    </div>
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm font-semibold">
                                    @fine.Amount.ToString("C")
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm">
                                    @fine.FineDate.ToString("dd MMM, yyyy")
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm">
                                    <span class="inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium @statusClass">
                                        @statusText
                                    </span>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="px-6 py-20 text-center">
                                <div class="flex flex-col items-center">
                                    <svg class="h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
                                    </svg>
                                    <h3 class="mt-2 text-sm font-semibold">No Fine History</h3>
                                    <p class="mt-1 text-sm text-gray-500">You do not have any fines on your account.</p>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (Model != null && Model.TotalPages > 1)
    {
        <div class="mt-6 flex items-center justify-between">
            <div class="text-sm text-on-surface-weak">
                Showing @(((Model.Page - 1) * Model.PageSize) + 1)
                to @(Math.Min(Model.Page * Model.PageSize, Model.Count))
                of @Model.Count results
            </div>
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                <a asp-action="MyFines" asp-route-page="@(Model.Page - 1)" class="relative inline-flex items-center rounded-l-md px-3 py-2 text-sm font-semibold ring-1 ring-inset ring-outline hover:bg-gray-50 @(Model.HasPreviousPage ? "" : "pointer-events-none opacity-40")">
                    Previous
                </a>
                <span class="relative z-10 inline-flex items-center bg-primary px-4 py-2 text-sm font-semibold text-white">Page @Model.Page of @Model.TotalPages</span>
                <a asp-action="MyFines" asp-route-page="@(Model.Page + 1)" class="relative inline-flex items-center rounded-r-md px-3 py-2 text-sm font-semibold ring-1 ring-inset ring-outline hover:bg-gray-50 @(Model.HasNextPage ? "" : "pointer-events-none opacity-40")">
                    Next
                </a>
            </nav>
        </div>
    }
</div>