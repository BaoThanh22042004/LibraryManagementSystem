@model Application.DTOs.CreateFineRequest
@using Application.DTOs
@using Domain.Enums

@{
    ViewData["Title"] = "Create Manual Fine";
    var loanDetails = ViewBag.LoanDetails as LoanDetailDto;
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 text-on-surface">
    <div class="flex justify-between items-center mb-6">
        <div>
            <h1 class="text-3xl font-bold">@ViewData["Title"]</h1>
            @if (loanDetails != null)
            {
                <p class="mt-1 text-sm text-on-surface-weak">Creating a fine associated with a specific loan.</p>
            }
            else
            {
                <p class="mt-1 text-sm text-on-surface-weak">Create a new fine that is not linked to an overdue item (e.g., for a damaged book).</p>
            }
        </div>
        <a asp-action="Index" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-secondary hover:bg-secondary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-secondary">
            Cancel
        </a>
    </div>

    <hr class="border-outline mb-8" />

    <form asp-action="Create" method="post">
        @Html.AntiForgeryToken()

        <div class="flex flex-col lg:flex-row gap-8">
            <div class="lg:w-2/3">
                <div class="bg-surface-alt shadow-md rounded-lg p-6">
                    <h2 class="text-xl font-semibold mb-6">Fine Details</h2>

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div asp-validation-summary="ModelOnly" class="mb-6 p-4 bg-red-100 text-red-800 border border-red-300 rounded-md" role="alert"></div>
                    }

                    <input type="hidden" asp-for="IsAutomaticCalculation" />
                    @if (loanDetails != null)
                    {
                        <input type="hidden" asp-for="LoanId" />
                    }

                    <div class="space-y-6">
                        <div>
                            <label asp-for="MemberId" class="block text-sm font-medium mb-1">Member ID</label>
                            <input asp-for="MemberId" type="text" pattern="\d*" inputmode="numeric"
                                   class="w-full rounded-md border border-outline bg-surface-alt px-4 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary @(loanDetails != null ? "cursor-not-allowed bg-gray-500/10" : "")"
                                   placeholder="Enter Member ID" readonly="@(loanDetails != null)" />
                            <span asp-validation-for="MemberId" class="mt-1 text-sm text-red-500"></span>
                            @if (loanDetails == null)
                            {
                                <p class="mt-2 text-xs text-on-surface-weak">You can find the Member ID on the member's profile page.</p>
                            }
                        </div>

                        <div>
                            <label asp-for="Type" class="block text-sm font-medium mb-1">Fine Type</label>
                            <div class="relative w-full">
                                <select asp-for="Type" asp-items="Html.GetEnumSelectList<FineType>()"
                                        class="peer w-full appearance-none rounded-md border border-outline bg-surface-alt px-4 py-2 text-sm transition focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary @(loanDetails != null ? "cursor-not-allowed bg-gray-500/10" : "")"
                                        disabled="@(loanDetails != null)">
                                    <option value="">-- Select Type --</option>
                                </select>
                                <svg class="pointer-events-none absolute right-3 top-1/2 h-4 w-4 -translate-y-1/2 text-on-surface/50" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
                                </svg>
                            </div>
                            <span asp-validation-for="Type" class="mt-1 text-sm text-red-500"></span>
                        </div>

                        <div>
                            <label asp-for="Amount" class="block text-sm font-medium mb-1">Amount</label>
                            <div class="relative mt-1">
                                <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-4">
                                    <span class="text-on-surface-weak sm:text-sm">$</span>
                                </div>
                                <input asp-for="Amount" type="number" step="0.01"
                                       class="block w-full rounded-md border border-outline bg-surface-alt pl-8 pr-4 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary" placeholder="0.00" />
                            </div>
                            <span asp-validation-for="Amount" class="mt-1 text-sm text-red-500"></span>
                        </div>

                        <div>
                            <label asp-for="Description" class="block text-sm font-medium mb-1">Description / Reason</label>
                            <textarea asp-for="Description" rows="3" class="w-full rounded-md border border-outline bg-surface-alt px-4 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary" placeholder="e.g., Fine for a damaged book cover."></textarea>
                            <span asp-validation-for="Description" class="mt-1 text-sm text-red-500"></span>
                        </div>

                        <div>
                            <div x-data="{ open: false }" class="bg-surface rounded-md border border-outline">
                                <button x-on:click="open = !open" type="button" class="w-full px-4 py-3 text-left text-sm font-medium flex justify-between items-center hover:bg-white/5">
                                    <span>Advanced Options: Rule Override</span>
                                    <svg :class="{ 'rotate-180': open }" class="w-5 h-5 transition-transform" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                    </svg>
                                </button>
                                <div x-show="open" x-transition class="px-4 pb-4 pt-2 border-t border-outline">
                                    <p class="text-xs text-on-surface-weak mb-3">Only use this if you need to override policies. This action is audited.</p>
                                    <label class="flex items-center space-x-3 cursor-pointer">
                                        <input type="checkbox" id="allowOverride" name="allowOverride" value="true" class="h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary">
                                        <span class="text-sm">Allow Override</span>
                                    </label>
                                    <div id="overrideReasonGroup" class="mt-3" style="display: none;">
                                        <label for="overrideReason" class="block text-sm font-medium mb-1">Override Reason</label>
                                        <textarea id="overrideReason" name="overrideReason" class="w-full rounded-md border border-outline bg-surface-alt px-4 py-2 text-sm" rows="2" placeholder="Explain why this override is necessary."></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="lg:w-1/3">
                @if (loanDetails != null)
                {
                    <div class="bg-surface-alt shadow-md rounded-lg p-6 sticky top-8">
                        <h2 class="text-xl font-semibold mb-4">Associated Loan</h2>
                        <div class="space-y-3 text-sm">
                            <div class="flex justify-between">
                                <span class="font-medium text-on-surface-weak">Loan ID:</span>
                                <span>#@loanDetails.Id</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="font-medium text-on-surface-weak">Book Title:</span>
                                <span class="text-right">@loanDetails.BookTitle</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="font-medium text-on-surface-weak">Member:</span>
                                <span>@loanDetails.MemberName</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="font-medium text-on-surface-weak">Due Date:</span>
                                <span>@loanDetails.DueDate.ToString("dd MMM, yyyy")</span>
                            </div>
                        </div>
                        <div class="mt-6 p-3 bg-primary/10 text-primary-dark border border-primary/20 rounded-md text-sm">
                            This fine will be linked to the loan above. The Member ID is locked.
                        </div>
                    </div>
                }
                else
                {
                    <div class="bg-surface-alt rounded-lg border-2 border-dashed border-outline p-8 text-center">
                        <svg class="mx-auto h-12 w-12 text-on-surface-weak" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <h3 class="mt-2 text-lg font-medium">Manual Fine</h3>
                        <p class="mt-1 text-sm text-on-surface-weak">This fine will be recorded without a direct link to a specific loan. Ensure you provide a clear description.</p>
                    </div>
                }
            </div>
        </div>

        <div class="mt-8 flex justify-end">
            <button type="submit" class="inline-flex items-center justify-center rounded-md border border-transparent bg-primary px-6 py-3 text-sm font-medium text-white shadow-sm hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2">
                Create Fine
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="//unpkg.com/alpinejs" defer></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Script cho Override Section
            const allowOverrideCheckbox = document.getElementById('allowOverride');
            if (allowOverrideCheckbox) {
                const overrideReasonGroup = document.getElementById('overrideReasonGroup');
                allowOverrideCheckbox.addEventListener('change', function () {
                    if (this.checked) {
                        overrideReasonGroup.style.display = 'block';
                    } else {
                        overrideReasonGroup.style.display = 'none';
                        const reasonTextarea = document.getElementById('overrideReason');
                        if(reasonTextarea) reasonTextarea.value = '';
                    }
                });
            }

            // Script ép kiểu số cho Member ID
            const memberIdInput = document.getElementById('MemberId');
            if(memberIdInput) {
                memberIdInput.addEventListener('input', function(event) {
                    event.target.value = event.target.value.replace(/[^0-9]/g, '');
                    if (event.target.value.length > 1 && event.target.value.startsWith('0')) {
                       event.target.value = event.target.value.substring(1);
                    }
                });
            }
        });
    </script>
}