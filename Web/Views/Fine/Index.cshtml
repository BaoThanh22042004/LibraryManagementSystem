@model PagedResult<FineBasicDto>
@using Application.Common
@using Application.DTOs
@using Domain.Enums

@{
    ViewData["Title"] = "Fine Management";

    var query = Context.Request.Query;
    var memberIdSearch = query["MemberId"].ToString();
    var loanIdSearch = query["LoanId"].ToString();
    var statusSearch = query["Status"].ToString();

    Func<FineStatus, string> GetStatusColorClass = status => status switch
    {
        FineStatus.Pending => "bg-yellow-500/10 text-yellow-400",
        FineStatus.Paid => "bg-green-500/10 text-green-400",
        FineStatus.Waived => "bg-gray-500/10 text-gray-400",
        _ => "bg-blue-500/10 text-blue-400"
    };
}

<div class="max-w-full mx-auto px-4 sm:px-6 lg:px-8 py-8 text-on-surface">
    <div class="sm:flex sm:items-center sm:justify-between mb-6">
        <div class="flex items-center gap-4">
            <a asp-controller="Home" asp-action="Dashboard"
               class="flex-shrink-0 inline-flex items-center justify-center h-10 w-10 rounded-full text-on-surface/70 hover:bg-black/5"
               title="Back to Dashboard">
                <i class="bi bi-arrow-left text-xl"></i>
            </a>
            <div class="sm:flex-auto">
                <h1 class="text-3xl font-bold">@ViewData["Title"]</h1>
                <p class="mt-2 text-sm text-on-surface-weak">
                    A list of all fines in the system. Use filters to narrow down the results.
                </p>
            </div>
        </div>
        <div class="mt-4 sm:mt-0 flex items-center space-x-3">
            <a asp-action="FinesReport" class="inline-flex items-center justify-center rounded-md border border-outline px-4 py-2 text-sm font-medium shadow-sm hover:bg-white/5">
                <i class="bi bi-bar-chart-line-fill mr-2"></i> View Report
            </a>
            <a asp-action="Create" class="inline-flex items-center justify-center rounded-md border border-transparent bg-primary px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-dark">
                <i class="bi bi-plus-lg mr-2"></i> Create Manual Fine
            </a>
        </div>
    </div>

    <div class="p-6 mb-6 rounded-lg overflow-hidden border border-outline bg-surface-alt">
        <form asp-action="Index" method="get" class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end">
            <div>
                <label for="MemberId" class="block text-sm font-medium mb-1">Member ID</label>
                <input type="text" name="MemberId" id="MemberId" value="@memberIdSearch" pattern="\d*" inputmode="numeric"
                       class="w-full rounded-md border border-outline bg-surface-alt px-4 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary" placeholder="e.g., 101" />
            </div>

            <div>
                <label for="LoanId" class="block text-sm font-medium mb-1">Loan ID</label>
                <input type="text" name="LoanId" id="LoanId" value="@loanIdSearch" pattern="\d*" inputmode="numeric"
                       class="w-full rounded-md border border-outline bg-surface-alt px-4 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary" placeholder="e.g., 202" />
            </div>

            <div>
                <label for="Status" class="block text-sm font-medium mb-1">Status</label>
                <div class="relative w-full">
                    <select name="Status" id="Status" class="peer w-full appearance-none rounded-md border border-outline bg-surface-alt px-4 py-2 text-sm transition focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary">
                        <option value="">All Statuses</option>
                        @foreach (var statusValue in Enum.GetValues(typeof(FineStatus)))
                        {
                            <option value="@statusValue" selected="@(statusSearch == statusValue.ToString())">@statusValue</option>
                        }
                    </select>
                    <svg class="pointer-events-none absolute right-3 top-1/2 h-4 w-4 -translate-y-1/2 text-on-surface/50" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
                    </svg>
                </div>
            </div>

            <div class="flex space-x-2">
                <button type="submit" class="flex-1 whitespace-nowrap rounded-md bg-primary border border-primary px-4 py-2 text-sm font-medium tracking-wide text-white transition hover:opacity-75 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary">
                    Search
                </button>
                <a asp-action="Index" class="flex-1 whitespace-nowrap rounded-md bg-transparent border border-outline px-4 py-2 text-sm font-medium tracking-wide transition hover:bg-white/5 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary">
                    Clear
                </a>
            </div>
        </form>
    </div>

    <div class="bg-surface-alt rounded-lg shadow overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-outline">
                <thead class="bg-surface">
                    <tr>
                        <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold sm:pl-6">Fine Info</th>
                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold">Member</th>
                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold">Amount</th>
                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold">Date Issued</th>
                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold">Status</th>
                        <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6"><span class="sr-only">Actions</span></th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-outline">
                    @if (Model != null && Model.Items.Any())
                    {
                        foreach (var fine in Model.Items)
                        {
                            <tr>
                                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium sm:pl-6">
                                    <a asp-action="Details" asp-route-id="@fine.Id" class="font-semibold text-primary hover:underline">#@fine.Id</a>
                                    @if (fine.LoanId.HasValue)
                                    {
                                        <div class="text-xs">
                                            Loan:
                                            <a asp-controller="Loan" asp-action="Details" asp-route-id="@fine.LoanId" class="text-on-surface-weak hover:underline">#@fine.LoanId</a>
                                        </div>
                                    }
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-on-surface-weak">
                                    <a asp-controller="User" asp-action="Details" asp-route-id="@fine.MemberId" class="font-semibold text-on-surface hover:underline">@fine.MemberName</a>
                                    <div class="text-xs">ID: @fine.MemberId</div>
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm font-bold">@fine.Amount.ToString("C")</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm">@fine.FineDate.ToString("dd MMM, yyyy")</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm">
                                    <span class="inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium @GetStatusColorClass(fine.Status)">
                                        @fine.Status.ToString()
                                    </span>
                                </td>
                                <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                                    <a asp-action="Details" asp-route-id="@fine.Id" class="text-primary hover:text-primary-dark">Details</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="px-6 py-20 text-center">
                                <div class="flex flex-col items-center">
                                    <svg class="h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                    </svg>
                                    <h3 class="mt-2 text-sm font-semibold">No Fines Found</h3>
                                    <p class="mt-1 text-sm text-gray-500">No fines matched your search criteria. Try adjusting your filters.</p>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (Model != null && Model.TotalPages > 1)
    {
        <div class="mt-6 flex items-center justify-between">
            <div class="text-sm text-on-surface-weak">
                Showing @(((Model.Page - 1) * Model.PageSize) + 1)
                to @(Math.Min(Model.Page * Model.PageSize, Model.Count))
                of @Model.Count results
            </div>
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                <a asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-MemberId="@memberIdSearch" asp-route-LoanId="@loanIdSearch" asp-route-Status="@statusSearch"
                   class="relative inline-flex items-center rounded-l-md px-3 py-2 text-sm font-semibold ring-1 ring-inset ring-outline hover:bg-gray-50 @(Model.HasPreviousPage ? "" : "pointer-events-none opacity-40")">
                    Previous
                </a>
                <span class="relative z-10 inline-flex items-center bg-primary px-4 py-2 text-sm font-semibold text-white">Page @Model.Page of @Model.TotalPages</span>
                <a asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-MemberId="@memberIdSearch" asp-route-LoanId="@loanIdSearch" asp-route-Status="@statusSearch"
                   class="relative inline-flex items-center rounded-r-md px-3 py-2 text-sm font-semibold ring-1 ring-inset ring-outline hover:bg-gray-50 @(Model.HasNextPage ? "" : "pointer-events-none opacity-40")">
                    Next
                </a>
            </nav>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            function enforceNumericInput(event) {
                if (event.key.length > 1 && event.key !== 'Backspace' && event.key !== 'Delete') {
                    return;
                }
                event.target.value = event.target.value.replace(/[^0-9]/g, '');
                if (event.target.value.length > 1 && event.target.value.startsWith('0')) {
                   event.target.value = event.target.value.substring(1);
                }
            }
            const memberIdInput = document.getElementById('MemberId');
            const loanIdInput = document.getElementById('LoanId');
            if (memberIdInput) {
                memberIdInput.addEventListener('input', enforceNumericInput);
            }
            if (loanIdInput) {
                loanIdInput.addEventListener('input', enforceNumericInput);
            }
        });
    </script>
}