@model Application.Common.PagedResult<Application.DTOs.NotificationListDto>

@{
    ViewData["Title"] = "Admin Notifications";
    var searchTerm = Context.Request.Query["search"].ToString();
}

<div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex items-center justify-between mb-6">
        <h2 class="text-2xl font-semibold text-gray-800">Admin Notifications</h2>

        <div class="flex items-center gap-3">
            <form method="get" class="flex items-center gap-2">
                <input type="text" name="search" value="@searchTerm"
                       placeholder="Search..."
                       class="border border-gray-300 px-3 py-2 rounded-md w-64" />
                <button type="submit"
                        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">
                    Search
                </button>
            </form>

            <a href="/Notification/Create"
               class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow">
                Send notification
            </a>
        </div>
    </div>

    <div class="overflow-x-auto bg-white shadow rounded-lg">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-100">
                <tr>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Email</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Subject</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Message</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Sent At</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Actions</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
                @foreach (var notification in Model.Items)
                {
                    <tr>
                        <td class="px-6 py-4 text-sm text-gray-700">@notification.Email</td>
                        <td class="px-6 py-4 text-sm text-gray-900">@notification.Subject</td>
                        <td class="px-6 py-4 text-sm text-gray-700">@notification.Message</td>
                        <td class="px-6 py-4 text-sm text-gray-500">@notification.SentAt?.ToString("g")</td>
                        <td class="px-6 py-4 text-sm">
                            <a asp-action="Details" asp-route-id="@notification.Id"
                               class="bg-blue-100 text-blue-800 hover:bg-blue-200 px-3 py-1 rounded text-xs font-medium">
                                Details
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @{
        int totalPages = Model.TotalPages;
        int currentPage = Model.Page;
        int startPage = Math.Max(1, currentPage - 2);
        int endPage = Math.Min(totalPages, currentPage + 2);

        var pageSize = Model.PageSize;
        var sortBy = Context.Request.Query["sortBy"].ToString() ?? "SentAt";
        var sortOrder = Context.Request.Query["sortOrder"].ToString() ?? "desc";
    }

    <nav class="mt-6 flex justify-center">
        <ul class="inline-flex -space-x-px">
            @if (currentPage > 1)
            {
                <li>
                    <a href="@Url.Action("Index", "Notification", new {
                            page = currentPage - 1,
                            search = searchTerm,
                            pageSize = pageSize,
                            sortBy = sortBy,
                            sortOrder = sortOrder
                        })"
                       class="px-4 py-2 border border-gray-300 hover:bg-gray-200">«</a>
                </li>
            }

            @if (startPage > 1)
            {
                <li>
                    <a href="@Url.Action("Index", "Notification", new {
                            page = 1,
                            search = searchTerm,
                            pageSize = pageSize,
                            sortBy = sortBy,
                            sortOrder = sortOrder
                        })"
                       class="px-4 py-2 border border-gray-300">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li><span class="px-4 py-2">...</span></li>
                }
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li>
                    <a href="@Url.Action("Index", "Notification", new {
                            page = i,
                            search = searchTerm,
                            pageSize = pageSize,
                            sortBy = sortBy,
                            sortOrder = sortOrder
                        })"
                       class="px-4 py-2 border border-gray-300 @(i == currentPage ? "bg-blue-500 text-white" : "bg-white text-gray-700") hover:bg-blue-100">
                        @i
                    </a>
                </li>
            }

            @if (endPage < totalPages)
            {
                @if (endPage < totalPages - 1)
                {
                    <li><span class="px-4 py-2">...</span></li>
                }
                <li>
                    <a href="@Url.Action("Index", "Notification", new {
                            page = totalPages,
                            search = searchTerm,
                            pageSize = pageSize,
                            sortBy = sortBy,
                            sortOrder = sortOrder
                        })"
                       class="px-4 py-2 border border-gray-300">@totalPages</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li>
                    <a href="@Url.Action("Index", "Notification", new {
                            page = currentPage + 1,
                            search = searchTerm,
                            pageSize = pageSize,
                            sortBy = sortBy,
                            sortOrder = sortOrder
                        })"
                       class="px-4 py-2 border border-gray-300 hover:bg-gray-200">»</a>
                </li>
            }
        </ul>
    </nav>
</div>
