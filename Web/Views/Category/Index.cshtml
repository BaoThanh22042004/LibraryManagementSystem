@model PaginatedCategoriesDto
@{
    ViewData["Title"] = "Categories";
}

<div class="flex justify-between items-center mb-6">
    <h1 class="text-3xl font-bold">Category Management</h1>
    @if (User.IsInRole("Admin") || User.IsInRole("Librarian"))
    {
        <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
            Create New Category
        </a>
    }
</div>

@await Html.PartialAsync("_AlertsPartial")

<div class="bg-white shadow-md rounded-lg overflow-hidden mb-6">
    <!-- Search Form -->
    <div class="bg-gray-50 p-4 border-b">
        <form asp-action="Index" method="get" class="flex flex-wrap gap-4">
            <div class="flex-grow">
                <div class="relative">
                    <input type="text" name="SearchTerm" value="@Context.Request.Query["SearchTerm"]" 
                           class="w-full p-2 pl-10 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
                           placeholder="Search by name or description...">
                    <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                        <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </div>
                </div>
            </div>
            <div>
                <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                    Search
                </button>
            </div>
            @if (!string.IsNullOrEmpty(Context.Request.Query["SearchTerm"]))
            {
                <div>
                    <a asp-action="Index" class="text-blue-600 hover:text-blue-800 py-2 px-4 rounded border border-blue-600 hover:border-blue-800">
                        Clear
                    </a>
                </div>
            }
        </form>
    </div>

    <!-- Categories Table -->
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Cover
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Name
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Description
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Created
                    </th>
                    <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @if (Model.Items.Any())
                {
                    @foreach (var category in Model.Items)
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap">
                                @if (!string.IsNullOrEmpty(category.CoverImageUrl))
                                {
                                    <img src="@category.CoverImageUrl" alt="@category.Name" class="h-12 w-12 object-cover rounded">
                                }
                                else
                                {
                                    <div class="h-12 w-12 rounded bg-gray-200 flex items-center justify-center text-gray-500">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                        </svg>
                                    </div>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900">@category.Name</div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="text-sm text-gray-500 line-clamp-2">
                                    @(string.IsNullOrEmpty(category.Description) ? "No description" : category.Description)
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-500">@category.CreatedAt.ToString("MMM dd, yyyy")</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <a asp-action="Details" asp-route-id="@category.Id" class="text-blue-600 hover:text-blue-900 mr-3">Details</a>
                                @if (User.IsInRole("Admin") || User.IsInRole("Librarian"))
                                {
                                    <a asp-action="Edit" asp-route-id="@category.Id" class="text-indigo-600 hover:text-indigo-900 mr-3">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@category.Id" class="text-red-600 hover:text-red-900">Delete</a>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="px-6 py-4 text-center text-gray-500">
                            No categories found. @(Context.Request.Query["SearchTerm"].Count > 0 ? "Try a different search term." : "")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (Model.Count > 0)
    {
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing
                        <span class="font-medium">@((Model.Page - 1) * Model.PageSize + 1)</span>
                        to
                        <span class="font-medium">@(Math.Min(Model.Page * Model.PageSize, Model.Count))</span>
                        of
                        <span class="font-medium">@Model.Count</span>
                        results
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        @if (Model.Page > 1)
                        {
                            <a asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }

                        @{
                            var totalPages = (int)Math.Ceiling(Model.Count / (double)Model.PageSize);
                            var startPage = Math.Max(1, Model.Page - 2);
                            var endPage = Math.Min(totalPages, startPage + 4);
                            startPage = Math.Max(1, endPage - 4);
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            if (i == Model.Page)
                            {
                                <span aria-current="page"
                                     class="relative inline-flex items-center px-4 py-2 border border-indigo-500 bg-indigo-50 text-sm font-medium text-indigo-600">
                                    @i
                                </span>
                            }
                            else
                            {
                                <a asp-action="Index" asp-route-page="@i" asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                                    @i
                                </a>
                            }
                        }

                        @if (Model.Page < totalPages)
                        {
                            <a asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }
                    </nav>
                </div>
            </div>
        </div>
    }
</div>