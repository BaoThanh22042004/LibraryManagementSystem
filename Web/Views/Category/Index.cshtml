@model PagedResult<CategoryDto>
@{
    ViewData["Title"] = "Categories";
}
<div class="max-w-7xl mx-auto px-7 sm:px-6 lg:px-8 py-6">
<div class="flex justify-between items-center mb-6">
    <h1 class="text-3xl font-bold">Category Management</h1>
    @if (User.IsInRole("Admin") || User.IsInRole("Librarian"))
    {
            <a asp-action="Create" class="inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-lg">
            Create New Category
        </a>
    }
</div>

@await Html.PartialAsync("_AlertsPartial")

    <!-- Search Form -->
    <div class="p-6 mb-6 rounded-radius overflow-hidden border border-outline bg-surface-alt text-on-surface dark:border-outline-dark dark:bg-surface-dark-alt dark:text-on-surface-dark">
        <form asp-action="Index" method="get" class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end">

            <!-- Search Input -->
            <div class="col-span-2">
                <label class="block text-sm font-medium mb-1">Search</label>
                <input type="text" name="SearchTerm" value="@Context.Request.Query["SearchTerm"]"
                       placeholder="Search by name or description..."
                       class="w-full rounded-radius border border-outline bg-surface-alt px-2 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary disabled:cursor-not-allowed disabled:opacity-75 dark:border-outline-dark dark:bg-surface-dark-alt/50 dark:focus-visible:outline-primary-dark" />
            </div>

            <!-- Search Button -->
            <div>
                <label class="block text-sm font-medium mb-1 invisible">Search</label>
                <button type="submit"
                        class=" whitespace-nowrap rounded-radius bg-primary border border-primary px-4 py-2 text-sm font-medium tracking-wide text-on-primary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed dark:bg-primary-dark dark:border-primary-dark dark:text-on-primary-dark dark:focus-visible:outline-primary-dark">
                    Search
                </button>
            </div>
        </form>
    </div>


    <!-- Categories Table -->
    <div class="overflow-hidden w-full overflow-x-auto rounded-radius border border-outline dark:border-outline-dark">
        <div class="flex items-center justify-between px-4 py-3">
            <h2 class="text-lg font-semibold">Category List</h2>
            <span class="text-sm">Total: @Model.Count categories</span>
        </div>
        <table class="w-full text-left text-sm text-on-surface dark:text-on-surface-dark">
            <thead class="border-b border-outline bg-surface-alt text-sm text-on-surface-strong dark:border-outline-dark dark:bg-surface-dark-alt dark:text-on-surface-dark-strong">
                <tr>
                    <th class="p-4">COVER</th>
                    <th class="p-4">NAME</th>
                    <th class="p-4">DESCRIPTION</th>
                    <th class="p-4">CREATED</th>
                    <th class="p-4 text-right">ACTIONS</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-outline dark:divide-outline-dark bg-surface dark:bg-surface-dark">
                @if (Model.Items.Any())
                {
                    @foreach (var category in Model.Items)
                    {
                        <tr class="hover:bg-surface-alt/50 dark:hover:bg-surface-dark-alt/50">
                            <td class="p-4 whitespace-nowrap">
                                @if (!string.IsNullOrEmpty(category.CoverImageUrl))
                                {
                                    <img src="@category.CoverImageUrl" alt="@category.Name" class="h-12 w-12 object-cover rounded" />
                                }
                                else
                                {
                                    <div class="h-12 w-12 rounded bg-outline/30 dark:bg-outline-dark/30 flex items-center justify-center text-on-surface/40 dark:text-on-surface-dark/40">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                        </svg>
                                    </div>
                                }
                            </td>
                            <td class="p-4 font-medium">@category.Name</td>
                            <td class="p-4 text-on-surface/70 dark:text-on-surface-dark/70">
                                <div class="line-clamp-2">
                                    @(string.IsNullOrEmpty(category.Description) ? "No description" : category.Description)
                                </div>
                            </td>
                            <td class="p-4 whitespace-nowrap text-on-surface/60 dark:text-on-surface-dark/60">
                                @category.CreatedAt.ToString("MMM dd, yyyy")
                            </td>
                            <td class="p-4 text-right whitespace-nowrap">
                                <div class="flex justify-end gap-2">
                                    <a asp-action="Details" asp-route-id="@category.Id"
                                       class="whitespace-nowrap rounded-radius bg-transparent p-0.5 font-semibold text-primary outline-primary hover:opacity-75 focus-visible:outline-2 focus-visible:outline-offset-2 active:opacity-100 active:outline-offset-0 dark:text-primary-dark dark:outline-primary-dark">
                                        Details
                                    </a>
                                    @if (User.IsInRole("Admin") || User.IsInRole("Librarian"))
                                    {
                                        <a asp-action="Edit" asp-route-id="@category.Id"
                                           class="text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@category.Id"
                                           class="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300">Delete</a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="p-6 text-center text-on-surface/60 dark:text-on-surface-dark/60">
                            No categories found.
                            @(Context.Request.Query["SearchTerm"].Count > 0 ? "Try a different search term." : "")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (Model.Count > 0)
    {
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing
                        <span class="font-medium">@((Model.Page - 1) * Model.PageSize + 1)</span>
                        to
                        <span class="font-medium">@(Math.Min(Model.Page * Model.PageSize, Model.Count))</span>
                        of
                        <span class="font-medium">@Model.Count</span>
                        results
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        @if (Model.Page > 1)
                        {
                            <a asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }

                        @{
                            var totalPages = (int)Math.Ceiling(Model.Count / (double)Model.PageSize);
                            var startPage = Math.Max(1, Model.Page - 2);
                            var endPage = Math.Min(totalPages, startPage + 4);
                            startPage = Math.Max(1, endPage - 4);
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            if (i == Model.Page)
                            {
                                <span aria-current="page"
                                     class="relative inline-flex items-center px-4 py-2 border border-indigo-500 bg-indigo-50 text-sm font-medium text-indigo-600">
                                    @i
                                </span>
                            }
                            else
                            {
                                <a asp-action="Index" asp-route-page="@i" asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                                    @i
                                </a>
                            }
                        }

                        @if (Model.Page < totalPages)
                        {
                            <a asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }
                    </nav>
                </div>
            </div>
        </div>
    }
    </div>