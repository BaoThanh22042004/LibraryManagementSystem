@model Application.Common.PagedResult<Application.DTOs.CategoryDto>
@{
    ViewData["Title"] = "Categories";
}

<div class="container mx-auto">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold">Categories</h1>
        <a asp-action="Create" class="rounded-radius bg-primary dark:bg-primary-dark border border-primary dark:border-primary-dark px-4 py-2 text-center text-sm font-medium tracking-wide text-on-primary dark:text-on-primary-dark hover:opacity-75">Create New</a>
    </div>    @if (TempData["Success"] != null)
    {
        <div class="bg-success/10 border border-success text-success px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["Success"]</span>
            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                <svg class="fill-current h-6 w-6 text-success" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
            </span>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="bg-danger/10 border border-danger text-danger px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["Error"]</span>
            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                <svg class="fill-current h-6 w-6 text-danger" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
            </span>
        </div>
    }    <!-- Search Form -->
    <form asp-action="Index" method="get" class="mb-6">
        <div class="flex">
            <input type="text" name="searchTerm" class="rounded-l-radius border border-outline dark:border-outline-dark py-2 px-4 w-full bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong" 
                   placeholder="Search categories..." value="@Context.Request.Query["searchTerm"]">
            <button class="rounded-none border border-outline dark:border-outline-dark border-l-0 py-2 px-4 bg-surface-alt dark:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong" type="submit">Search</button>
            @if (!string.IsNullOrEmpty(Context.Request.Query["searchTerm"]))
            {
                <a asp-action="Index" class="rounded-r-radius border border-outline dark:border-outline-dark border-l-0 py-2 px-4 bg-surface-alt dark:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">Clear</a>
            }
            else
            {
                <div class="rounded-r-radius border border-outline dark:border-outline-dark border-l-0 py-2 px-4 bg-surface-alt dark:bg-surface-dark-alt"></div>
            }
        </div>
    </form>

    @if (Model.Items.Count > 0)
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">            @foreach (var category in Model.Items)
            {
                <div class="border border-outline dark:border-outline-dark rounded-radius overflow-hidden shadow-md bg-surface dark:bg-surface-dark">
                    <div class="h-48 bg-gray-200 overflow-hidden">
                        @if (!string.IsNullOrEmpty(category.CoverImageUrl))
                        {
                            <img src="@category.CoverImageUrl" class="w-full h-full object-cover" alt="@category.Name">
                        }
                        else
                        {
                            <div class="w-full h-full flex items-center justify-center bg-gray-200">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                                </svg>
                            </div>
                        }
                    </div>
                    <div class="p-4">
                        <h3 class="text-lg font-semibold mb-2 text-on-surface-strong dark:text-on-surface-dark-strong">@category.Name</h3>
                        @if (!string.IsNullOrEmpty(category.Description))
                        {
                            <p class="text-on-surface dark:text-on-surface-dark mb-4 text-sm">@(category.Description.Length > 100 ? category.Description.Substring(0, 100) + "..." : category.Description)</p>
                        }
                        <p class="text-on-surface dark:text-on-surface-dark text-sm mb-4">Books: @category.BooksCount</p>
                        <div class="flex justify-between gap-2">
                            <a asp-action="Details" asp-route-id="@category.Id" class="rounded-radius border border-outline dark:border-outline-dark px-3 py-1 text-center text-sm font-medium hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">Details</a>
                            <a asp-action="Edit" asp-route-id="@category.Id" class="rounded-radius border border-primary dark:border-primary-dark text-primary dark:text-primary-dark px-3 py-1 text-center text-sm font-medium hover:bg-primary dark:hover:bg-primary-dark hover:text-on-primary dark:hover:text-on-primary-dark">Edit</a>
                            <a asp-action="Delete" asp-route-id="@category.Id" class="rounded-radius border border-danger text-danger px-3 py-1 text-center text-sm font-medium hover:bg-danger hover:text-on-danger">Delete</a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="flex justify-center mt-8">
                <nav class="flex" aria-label="Pagination">
                    <ul class="flex list-none">                        @if (Model.HasPreviousPage)
                        {
                            <li class="mx-1">
                                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                                   class="rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-on-surface dark:text-on-surface-dark hover:bg-surface-alt dark:hover:bg-surface-dark-alt">Previous</a>
                            </li>
                        }
                        else
                        {
                            <li class="mx-1">
                                <span class="rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-on-surface dark:text-on-surface-dark bg-surface-alt dark:bg-surface-dark-alt opacity-50 cursor-not-allowed">Previous</span>
                            </li>
                        }

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {                            <li class="mx-1">
                                @if (i == Model.PageNumber)
                                {
                                    <span class="rounded-radius border border-primary dark:border-primary-dark bg-primary dark:bg-primary-dark px-3 py-2 text-on-primary dark:text-on-primary-dark">@i</span>
                                }
                                else
                                {
                                    <a asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                                       class="rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-on-surface dark:text-on-surface-dark hover:bg-surface-alt dark:hover:bg-surface-dark-alt">@i</a>
                                }
                            </li>
                        }                        @if (Model.HasNextPage)
                        {
                            <li class="mx-1">
                                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                                   class="rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-on-surface dark:text-on-surface-dark hover:bg-surface-alt dark:hover:bg-surface-dark-alt">Next</a>
                            </li>
                        }
                        else
                        {
                            <li class="mx-1">
                                <span class="rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-on-surface dark:text-on-surface-dark bg-surface-alt dark:bg-surface-dark-alt opacity-50 cursor-not-allowed">Next</span>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }    }
    else
    {
        <div class="rounded-radius bg-surface-alt dark:bg-surface-dark-alt border border-outline dark:border-outline-dark p-6 text-center">
            <p class="text-on-surface-strong dark:text-on-surface-dark-strong">No categories found. @(Context.Request.Query["searchTerm"].Count > 0 ? $"Try a different search term." : "")</p>
        </div>
    }
</div>