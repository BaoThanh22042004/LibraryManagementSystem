@model Application.DTOs.CategoryDetailsDto
@{
    ViewData["Title"] = "Category Details";
}

<div class="container mx-auto">
    <div class="bg-surface-alt dark:bg-surface-dark-alt border border-outline dark:border-outline-dark rounded-radius shadow-md overflow-hidden">
        <div class="bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark p-4 flex justify-between items-center">
            <h1 class="text-xl font-bold">@Model.Name</h1>
            <div class="flex gap-2">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="rounded-radius border border-on-primary dark:border-on-primary-dark px-3 py-1 text-sm font-medium text-on-primary dark:text-on-primary-dark hover:bg-primary-dark dark:hover:bg-primary">Edit</a>
                <a asp-action="Index" class="rounded-radius border border-on-primary dark:border-on-primary-dark px-3 py-1 text-sm font-medium text-on-primary dark:text-on-primary-dark hover:bg-primary-dark dark:hover:bg-primary">Back to List</a>
            </div>
        </div>
        <div class="p-6">
            <div class="flex flex-col md:flex-row gap-8">
                <div class="w-full md:w-1/3">
                    @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                    {
                        <img src="@Model.CoverImageUrl" class="w-full h-auto rounded-radius" alt="@Model.Name">
                    }
                    else
                    {
                        <div class="w-full h-60 flex items-center justify-center bg-gray-200 rounded-radius">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                            </svg>
                        </div>
                    }
                </div>
                <div class="w-full md:w-2/3">                    <dl class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <dt class="font-semibold text-on-surface-strong dark:text-on-surface-dark-strong">Name</dt>
                        <dd class="md:col-span-2 text-on-surface dark:text-on-surface-dark">@Model.Name</dd>

                        <dt class="font-semibold text-on-surface-strong dark:text-on-surface-dark-strong">Description</dt>
                        <dd class="md:col-span-2 text-on-surface dark:text-on-surface-dark">@(string.IsNullOrEmpty(Model.Description) ? "N/A" : Model.Description)</dd>

                        <dt class="font-semibold text-on-surface-strong dark:text-on-surface-dark-strong">Books Count</dt>
                        <dd class="md:col-span-2 text-on-surface dark:text-on-surface-dark">@Model.BooksCount</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-8">
        <h2 class="text-xl font-bold mb-4">Books in this Category</h2>
        @if (Model.Books.Count > 0)
        {            <div class="overflow-x-auto">
                <table class="w-full border-collapse rounded-radius overflow-hidden">
                    <thead class="bg-surface-alt dark:bg-surface-dark-alt">
                        <tr>
                            <th class="border border-outline dark:border-outline-dark p-3 text-left text-on-surface-strong dark:text-on-surface-dark-strong">Title</th>
                            <th class="border border-outline dark:border-outline-dark p-3 text-left text-on-surface-strong dark:text-on-surface-dark-strong">Author</th>
                            <th class="border border-outline dark:border-outline-dark p-3 text-left text-on-surface-strong dark:text-on-surface-dark-strong">ISBN</th>
                            <th class="border border-outline dark:border-outline-dark p-3 text-left text-on-surface-strong dark:text-on-surface-dark-strong">Status</th>
                            <th class="border border-outline dark:border-outline-dark p-3 text-left text-on-surface-strong dark:text-on-surface-dark-strong">Available Copies</th>
                            <th class="border border-outline dark:border-outline-dark p-3 text-left text-on-surface-strong dark:text-on-surface-dark-strong">Actions</th>
                        </tr>
                    </thead>
                    <tbody>                        @foreach (var book in Model.Books)
                        {
                            <tr class="hover:bg-surface-alt dark:hover:bg-surface-dark-alt">
                                <td class="border border-outline dark:border-outline-dark p-3">
                                    <div class="flex items-center gap-2">
                                        @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                        {
                                            <img src="@book.CoverImageUrl" alt="@book.Title" class="w-10 h-12 object-cover rounded">
                                        }
                                        else
                                        {
                                            <div class="w-10 h-12 flex items-center justify-center bg-gray-200 rounded">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                                                </svg>
                                            </div>
                                        }
                                        <span class="text-on-surface-strong dark:text-on-surface-dark-strong">@book.Title</span>
                                    </div>
                                </td>
                                <td class="border border-outline dark:border-outline-dark p-3 text-on-surface dark:text-on-surface-dark">@book.Author</td>
                                <td class="border border-outline dark:border-outline-dark p-3 text-on-surface dark:text-on-surface-dark">@book.ISBN</td>
                                <td class="border border-outline dark:border-outline-dark p-3 text-on-surface dark:text-on-surface-dark">@book.Status</td>
                                <td class="border border-outline dark:border-outline-dark p-3 text-on-surface dark:text-on-surface-dark">@book.AvailableCopiesCount / @book.CopiesCount</td>
                                <td class="border border-outline dark:border-outline-dark p-3">
                                    <a href="/Book/Details/@book.Id" class="rounded-radius border border-outline dark:border-outline-dark px-2 py-1 text-xs font-medium hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">Details</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>        }
        else
        {
            <div class="rounded-radius bg-surface-alt dark:bg-surface-dark-alt border border-outline dark:border-outline-dark p-6 text-center">
                <p class="text-on-surface-strong dark:text-on-surface-dark-strong">No books in this category.</p>
            </div>
        }
    </div>
</div>