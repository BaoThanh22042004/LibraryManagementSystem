@model CategoryWithBooksDto
@{
    ViewData["Title"] = "Category Details";
}

<div class="mb-6">
    <div class="flex justify-between items-center">
        <div class="flex gap-4 items-center mb-6">
            <a asp-action="Index" class="whitespace-nowrap bg-transparent rounded-radius border border-primary px-4 py-2 text-sm font-medium tracking-wide text-primary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed ">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m12 19-7-7 7-7" /><path d="M19 12H5" /></svg>
            </a>
            <h1 class="text-3xl font-bold">Category Details</h1>
        </div>

        @if (User.IsInRole("Admin") || User.IsInRole("Librarian"))
        {
            <div class="flex space-x-2">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="whitespace-nowrap rounded-radius bg-secondary border border-secondary px-4 py-2 text-sm font-medium tracking-wide text-on-secondary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-secondary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed">
                    Edit
                </a>
                <a asp-action="Delete" asp-route-id="@Model.Id" class="whitespace-nowrap rounded-radius bg-danger border border-danger px-4 py-2 text-sm font-medium tracking-wide text-on-danger transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-danger active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed">
                    Delete
                </a>
            </div>
        }
    </div>
</div>

@await Html.PartialAsync("_AlertsPartial")

<div class="bg-white shadow-md rounded-lg overflow-hidden mb-6">
    <div class="flex flex-col md:flex-row">
        <!-- Category Image and Details -->
        <div class="p-6 md:w-1/3">
            <div class="flex flex-col items-center">
                @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                {
                    <img src="@Model.CoverImageUrl" alt="@Model.Name" class="h-64 aspect-square object-cover rounded-lg shadow-md mb-4">
                }
                else
                {
                    <div class="h-64 aspect-square bg-gray-200 rounded-lg shadow-md flex items-center justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-20 w-20 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                    </div>
                }

                <div class="w-full">
                    <h2 class="text-2xl font-bold text-center mb-4">@Model.Name</h2>

                    <div class="mb-4">
                        <div class="flex justify-center space-x-2 text-gray-600 text-sm mb-2">
                            <span>Created @Model.CreatedAt.ToString("MMM dd, yyyy")</span>
                        </div>
                        
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="text-center text-gray-500 text-sm">
                                Last updated: @Model.UpdatedAt.Value.ToString("MMM dd, yyyy")
                            </div>
                        }
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="mt-4">
                    <h3 class="text-lg font-semibold mb-2">Description</h3>
                    <p class="text-gray-700">@Model.Description</p>
                </div>
            }
        </div>

        <!-- Books in this Category -->
        <div class="p-6 border-t md:border-t-0 md:border-l border-gray-200 md:w-2/3">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-semibold">Books in this Category</h3>
                <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2.5 py-0.5 rounded">
                    @Model.BookCount Book@(Model.BookCount != 1 ? "s" : "")
                </span>
            </div>

            @if (Model.Books.Any())
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Title
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Author
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    ISBN
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var book in Model.Books)
                            {
                                <tr class="hover:bg-gray-50">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900">@book.Title</div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-500">@book.Author</div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-500">@book.ISBN</div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-yellow-700">
                                No books have been assigned to this category yet.
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>