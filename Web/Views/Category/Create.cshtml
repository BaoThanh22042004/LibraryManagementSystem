@model CreateCategoryRequest
@{
	ViewData["Title"] = "Create Category";
}
<div class="max-w-4xl mx-auto px-4 py-8">

	<div class="flex gap-4 items-center mb-6">
		<a asp-action="Index" class="whitespace-nowrap bg-transparent rounded-radius border border-primary px-4 py-2 text-sm font-medium tracking-wide text-primary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed ">
			<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m12 19-7-7 7-7" /><path d="M19 12H5" /></svg>
		</a>
		<h1 class="text-3xl font-bold">Create Category</h1>
	</div>

	@await Html.PartialAsync("_AlertsPartial")

	<div class="p-6 mb-6 rounded-radius shadow-md flex-col overflow-hidden border border-outline bg-surface text-on-surface">
		<form asp-action="Create" method="post" enctype="multipart/form-data" class="space-y-6">
			<!-- Category Name -->
			<div>
				<label asp-for="Name" class="block text-sm font-medium mb-1"><span class="text-red-600">*</span> Category Name</label>
				<input asp-for="Name"
					   class="w-full rounded-radius border border-outline bg-surface px-3 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
					   placeholder="Enter category name"
					   data-val-remote-url="@Url.Action("NameExists")"
					   data-val-remote="A category with this name already exists."
					   data-val-remote-additionalfields="*.Name" />
				<span asp-validation-for="Name" class="text-red-600 text-sm"></span>
			</div>

			<!-- Description -->
			<div>
				<label asp-for="Description" class="block text-sm font-medium mb-1">Description</label>
				<textarea asp-for="Description" rows="4"
						  class="w-full rounded-radius border border-outline bg-surface px-3 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
						  placeholder="Enter category description (optional)"></textarea>
				<span asp-validation-for="Description" class="text-red-600 text-sm"></span>
			</div>

			<!-- Cover Image -->
			<div class="relative flex w-full flex-col gap-1 text-on-surface dark:text-on-surface-dark">
				<label class="block w-fit pl-0.5 text-sm font-medium mb-1">Cover Image</label>
				<input type="file" name="CoverImageFile" accept="image/*"
					   class="w-full overflow-clip rounded-radius border border-outline bg-surface text-sm file:mr-4 file:border-none file:bg-secondary file:px-4 file:py-2 file:font-medium file:text-on-secondary focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary disabled:cursor-not-allowed" />
				@if (ViewData.ModelState["CoverImageFile"]?.Errors.Count > 0)
				{
					<span class="text-red-600 text-sm">@ViewData.ModelState["CoverImageFile"]!.Errors[0].ErrorMessage</span>
				}
				<small class="pl-0.5 text-gray-500 mt-1">Upload an image file (jpg, png, gif, webp) to represent this category (optional).</small>
			</div>

			<!-- Actions -->
			<div>
				<button type="submit" class="w-full whitespace-nowrap rounded-radius bg-primary border border-primary px-4 py-2 text-sm font-medium tracking-wide text-on-primary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed">
					Create
				</button>
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		// Client-side validation for category name uniqueness
		$(document).ready(function () {
			$.validator.addMethod("uniqueCategoryName", function (value, element) {
				var isValid = false;
				$.ajax({
					type: "GET",
					url: "@Url.Action("NameExists")",
					data: { name: value },
					dataType: "json",
					async: false,
					success: function (data) {
						isValid = !data.exists;
					}
				});
				return isValid;
			}, "A category with this name already exists.");

			$("#Name").rules("add", { uniqueCategoryName: true });
		});
	</script>
}