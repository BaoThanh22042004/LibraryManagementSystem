@model CreateCategoryRequest
@{
    ViewData["Title"] = "Create Category";
}
<div class="max-w-4xl mx-auto px-4 py-8">

<div class="flex justify-between items-center mb-6">
    <a asp-action="Index" class="inline-flex items-center px-3 py-1.5 border border-blue-600 text-blue-600 hover:bg-blue-600 hover:text-white text-sm rounded-md transition">
        ← Back to List
    </a>
</div>

@await Html.PartialAsync("_AlertsPartial")

<div class="p-6 mb-6 overflow-hidden border border-outline bg-surface-alt text-on-surface dark:border-outline-dark dark:bg-surface-dark-alt dark:text-on-surface-dark rounded-radius">
    <div class="text-white px-6 rounded-t-radius rounded-b-radius">
        <h5 class="text-3xl text-center font-bold">Create Category</h5>
    </div>

    <div class="p-6">
        <form asp-action="Create" method="post" enctype="multipart/form-data" class="space-y-6">
            <div asp-validation-summary="ModelOnly" class="text-red-600 text-sm"></div>

            <!-- Category Name -->
            <div>
                <label asp-for="Name" class="block text-sm font-medium mb-1">Category Name <span class="text-red-600">*</span></label>
                <input asp-for="Name"
                       class="w-full rounded-radius border border-outline bg-surface-alt px-3 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary dark:border-outline-dark dark:bg-surface-dark-alt/50 dark:focus-visible:outline-primary-dark"
                       placeholder="Enter category name"
                       data-val-remote-url="@Url.Action("NameExists")"
                       data-val-remote="A category with this name already exists."
                       data-val-remote-additionalfields="*.Name" />
                <span asp-validation-for="Name" class="text-red-600 text-sm"></span>
            </div>

            <!-- Description -->
            <div>
                <label asp-for="Description" class="block text-sm font-medium mb-1">Description</label>
                <textarea asp-for="Description" rows="4"
                          class="w-full rounded-radius border border-outline bg-surface-alt px-3 py-2 text-sm focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary dark:border-outline-dark dark:bg-surface-dark-alt/50 dark:focus-visible:outline-primary-dark"
                          placeholder="Enter category description (optional)"></textarea>
                <span asp-validation-for="Description" class="text-red-600 text-sm"></span>
            </div>

            <!-- Cover Image -->
            <div>
                <label class="block text-sm font-medium mb-1">Cover Image</label>
                <input type="file" name="CoverImageFile" accept="image/*"
                       class="w-full rounded-radius border border-outline bg-surface-alt px-3 py-2 text-sm file:mr-4 file:py-1 file:px-3 file:rounded file:border-0 file:bg-primary file:text-on-primary dark:border-outline-dark dark:bg-surface-dark-alt/50" />
                @if (ViewData.ModelState["CoverImageFile"]?.Errors.Count > 0)
                {
                    <span class="text-red-600 text-sm">@ViewData.ModelState["CoverImageFile"]!.Errors[0].ErrorMessage</span>
                }
                <p class="text-sm text-gray-500 mt-1 dark:text-gray-400">Upload an image file (jpg, png, gif, webp) to represent this category. Optional.</p>
            </div>

            <!-- Actions -->
                <div class="pt-4">
                    <button type="submit" class="w-full whitespace-nowrap rounded-radius bg-primary border border-primary px-4 py-2 text-sm font-medium tracking-wide text-on-primary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed dark:bg-primary-dark dark:border-primary-dark dark:text-on-primary-dark dark:focus-visible:outline-primary-dark">
                        Create
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // Client-side validation for category name uniqueness
        $(document).ready(function () {
            $.validator.addMethod("uniqueCategoryName", function (value, element) {
                var isValid = false;
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("NameExists")",
                    data: { name: value },
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        isValid = !data.exists;
                    }
                });
                return isValid;
            }, "A category with this name already exists.");

            $("#Name").rules("add", { uniqueCategoryName: true });
        });
    </script>
}