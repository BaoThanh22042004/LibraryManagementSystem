@model PagedResult<ReservationBasicDto>

@{
    ViewData["Title"] = "Reservations";
}
<div class="max-w-7xl mx-auto px-7 sm:px-6 lg:px-8 py-6">
<div class="flex justify-between items-center mb-6">
    <h1 class="text-3xl font-bold">Reservation Management</h1>
    <div class="flex justify-between items-center">
        <button class="inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-lg">
            <a asp-action="Create">
                Add New Reservation
            </a>
        </button>
    </div>
</div>


@await Html.PartialAsync("_AlertsPartial")

    <!-- Reservations Table -->
    <div class="overflow-hidden w-full overflow-x-auto rounded-radius border border-outline dark:border-outline-dark">
        <div class="flex items-center justify-between px-4 py-3">
            <h2 class="text-lg font-semibold">Reservation List</h2>
            <span class="text-sm">Total: @Model.Count reservations</span>
        </div>
    <div class="overflow-hidden w-full overflow-x-auto rounded-radius border border-outline dark:border-outline-dark">
        <table class="w-full text-left text-sm text-on-surface dark:text-on-surface-dark">
            <thead class="border-b border-outline bg-surface-alt text-sm text-on-surface-strong dark:border-outline-dark dark:bg-surface-dark-alt dark:text-on-surface-dark-strong">
                    <tr>
                        <th class="p-4 text-center">MEMBER NAME</th>
                        <th class="p-4 text-center">BOOK TITLE</th>
                        <th class="p-4 text-center">BOOK COPY ID</th>
                        <th class="p-4 text-center">RESERVATION DATE</th>
                        <th class="p-4 text-center">PICKUP DEADLINE</th>
                        <th class="p-4 text-center">QUEUE POSITION</th>
                        <th class="p-4 text-center">STATUS</th>
                        <th class="p-4 text-center">ACTIONS</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-outline dark:divide-outline-dark bg-surface dark:bg-surface-dark">
                    @if (Model.Items.Any())
                    {
                        @foreach (var reservation in Model.Items)
                        {
                            <tr class="hover:bg-surface-alt/50 dark:hover:bg-surface-dark-alt/50">
                                <td class="p-4 whitespace-nowrap text-center font-medium">@reservation.MemberName</td>
                                <td class="p-4 whitespace-nowrap text-center">@reservation.BookTitle</td>
                                <td class="p-4 whitespace-nowrap text-center text-on-surface/70 dark:text-on-surface-dark/70">@reservation.BookCopyId</td>
                                <td class="p-4 whitespace-nowrap text-center text-on-surface/70 dark:text-on-surface-dark/70">@reservation.ReservationDate</td>
                                <td class="p-4 whitespace-nowrap text-center text-on-surface/70 dark:text-on-surface-dark/70">@reservation.PickupDeadline</td>
                                <td class="p-4 whitespace-nowrap text-center text-on-surface/70 dark:text-on-surface-dark/70">@reservation.QueuePosition</td>
                                <td class="p-4 text-center">
                                    @{
                                        var statusClasses = reservation.Status switch
                                        {
                                            Domain.Enums.ReservationStatus.Active => "bg-green-100 text-green-700",
                                            Domain.Enums.ReservationStatus.Fulfilled => "bg-blue-100 text-blue-700",
                                            Domain.Enums.ReservationStatus.Cancelled => "bg-red-100 text-red-700",
                                            Domain.Enums.ReservationStatus.Expired => "bg-gray-100 text-gray-700",
                                            _ => "bg-gray-100 text-gray-600"
                                        };
                                    }
                                    <span class="inline-block px-2 py-1 rounded text-xs font-semibold @statusClasses">
                                        @reservation.Status
                                    </span>
                                </td>
                                <td class="p-4 text-center">
                                    <a asp-action="Details" asp-route-id="@reservation.Id"
                                       class="whitespace-nowrap rounded-radius bg-transparent p-0.5 font-semibold text-primary outline-primary hover:opacity-75 focus-visible:outline-2 focus-visible:outline-offset-2 active:opacity-100 active:outline-offset-0 dark:text-primary-dark dark:outline-primary-dark"
                                       title="View details">
                                        Details
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" class="p-6 text-center text-on-surface/60 dark:text-on-surface-dark/60">
                                No reservations found.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.Count > 0)
    {
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing
                        <span class="font-medium">@((Model.Page - 1) * Model.PageSize + 1)</span>
                        to
                        <span class="font-medium">@(Math.Min(Model.Page * Model.PageSize, Model.Count))</span>
                        of
                        <span class="font-medium">@Model.Count</span>
                        results
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        @{
                            var totalPages = (int)Math.Ceiling(Model.Count / (double)Model.PageSize);
                            var startPage = Math.Max(1, Model.Page - 2);
                            var endPage = Math.Min(totalPages, startPage + 4);
                            startPage = Math.Max(1, endPage - 4);

                            var routeData = new Dictionary<string, string>();
                        }

                        @if (Model.Page > 1)
                        {
                            routeData["PageNumber"] = (Model.Page - 1).ToString();
                            <a asp-action="Index" asp-all-route-data="@routeData"
                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            if (i == Model.Page)
                            {
                                <span aria-current="page"
                                      class="relative inline-flex items-center px-4 py-2 border border-indigo-500 bg-indigo-50 text-sm font-medium text-indigo-600">
                                    @i
                                </span>
                            }
                            else
                            {
                                routeData["PageNumber"] = i.ToString();
                                <a asp-action="Index" asp-all-route-data="@routeData"
                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                                    @i
                                </a>
                            }
                        }

                        @if (Model.Page < totalPages)
                        {
                            routeData["PageNumber"] = (Model.Page + 1).ToString();
                            <a asp-action="Index" asp-all-route-data="@routeData"
                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }
                    </nav>
                </div>
            </div>
        </div>
    }
    </div>