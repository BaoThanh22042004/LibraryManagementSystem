@model PagedResult<BookBasicDto>
@{
    ViewData["Title"] = "Books";
}
<div class="max-w-7xl mx-auto px-7 sm:px-6 lg:px-8 py-6">
    <div class="flex items-center justify-between mb-6">
    <h1 class="text-3xl font-bold">Book Management</h1>
    @if (User.IsInRole("Admin") || User.IsInRole("Librarian"))
    {
         <a asp-action="Create" class="inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-lg">
            Add New Book
        </a>
    }
</div>

@await Html.PartialAsync("_AlertsPartial")

    <!-- Search Form -->
    <div class="bg-gray-50 p-4 border-b">
        <form asp-action="Index" method="get" class="space-y-4">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="SearchTerm">Search</label>
                    <div class="relative">
                        <input type="text" id="SearchTerm" name="SearchTerm"
                               value="@ViewBag.SearchTerm"
                               class="w-full p-2 pl-10 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
                               placeholder="Search by title, author, or ISBN...">
                        <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                            <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                            </svg>
                        </div>
                    </div>
                </div>

                <div>
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="CategoryId">Category</label>
                    <select id="CategoryId" name="CategoryId"
                            class="w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500">
                        @if (ViewBag.CategoryId == null)
                        {
                            <option value="" selected>All Categories</option>
                        }
                        else
                        {
                            <option value="">All Categories</option>
                        }
                        @if (ViewBag.Categories != null)
                        {
                            foreach (var category in ViewBag.Categories)
                            {

                                if (ViewBag.CategoryId != null && ViewBag.CategoryId.ToString() == category.Id.ToString())
                                {
                                    <option value="@category.Id" selected>@category.Name</option>
                                }
                                else
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="flex items-end">
                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-2">
                        Search
                    </button>
                    <a asp-action="Index" class="text-blue-600 hover:text-blue-800 py-2 px-4 rounded border border-blue-600 hover:border-blue-800">
                        Clear
                    </a>
                </div>
            </div>

            <!-- Search Buttons -->
            <div>
                <button type="submit"
                        class="whitespace-nowrap rounded-radius bg-primary border border-primary px-4 py-2 text-sm font-medium tracking-wide text-on-primary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed dark:bg-primary-dark dark:border-primary-dark dark:text-on-primary-dark dark:focus-visible:outline-primary-dark">
                    Search
                </button>
            </div>
        </form>

    </div>
    <!-- Books Table -->
    <div class="overflow-hidden w-full overflow-x-auto rounded-radius border border-outline dark:border-outline-dark">
        <div class="flex items-center justify-between px-4 py-3">
            <h2 class="text-lg font-semibold">Book List</h2>
            <span class="text-sm">Total: @Model.Count books</span>
        </div>
    <div class="overflow-hidden w-full overflow-x-auto rounded-radius border border-outline dark:border-outline-dark">
        <table class="w-full text-left text-sm text-on-surface dark:text-on-surface-dark">
            <thead class="border-b border-outline bg-surface-alt text-sm text-on-surface-strong dark:border-outline-dark dark:bg-surface-dark-alt dark:text-on-surface-dark-strong">
                <tr>
                    <th class="p-4">COVER</th>
                    <th class="p-4">TITLE</th>
                    <th class="p-4">AUTHOR</th>
                    <th class="p-4">ISBN</th>
                    <th class="p-4">STATUS</th>
                    <th class="p-4">COPIES</th>
                    <th class="p-4 text-right">ACTIONS</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-outline dark:divide-outline-dark bg-surface dark:bg-surface-dark">
                @if (Model.Items.Any())
                {
                    @foreach (var book in Model.Items)
                    {
                        <tr class="hover:bg-surface-alt/50 dark:hover:bg-surface-dark-alt/50">
                            <td class="p-4 whitespace-nowrap">
                                @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                {
                                    <img src="@book.CoverImageUrl" alt="@book.Title" class="h-16 w-12 object-cover rounded">
                                }
                                else
                                {
                                    <div class="h-16 w-12 rounded bg-outline/30 dark:bg-outline-dark/30 flex items-center justify-center text-on-surface/40 dark:text-on-surface-dark/40">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                                        </svg>
                                    </div>
                                }
                            </td>
                            <td class="p-4 font-medium">@book.Title</td>
                            <td class="p-4 text-on-surface/70 dark:text-on-surface-dark/70">@book.Author</td>
                            <td class="p-4 text-on-surface/70 dark:text-on-surface-dark/70">@book.ISBN</td>
                            <td class="p-4">
                                @{
                                    var statusClasses = book.Status switch
                                    {
                                        Domain.Enums.BookStatus.Available => "bg-green-100 text-green-700",
                                        Domain.Enums.BookStatus.Unavailable => "bg-red-100 text-red-700",
                                        Domain.Enums.BookStatus.UnderMaintenance => "bg-yellow-100 text-yellow-800",
                                        _ => "bg-gray-100 text-gray-600"
                                    };
                                }
                                <span class="inline-block px-2 py-1 rounded text-xs font-semibold @statusClasses">
                                    @book.Status
                                </span>
                            </td>
                            <td class="p-4">
                                <span class="text-sm font-semibold text-green-600">@book.AvailableCopies</span>
                                <span class="text-on-surface/60 dark:text-on-surface-dark/60"> / @book.TotalCopies</span>
                            </td>
                            <td class="p-4 text-right">
                                <div class="flex justify-end gap-2">
                                    <a asp-action="Details" asp-route-id="@book.Id"
                                       class="whitespace-nowrap rounded-radius bg-transparent p-0.5 font-semibold text-primary outline-primary hover:opacity-75 focus-visible:outline-2 focus-visible:outline-offset-2 active:opacity-100 active:outline-offset-0 dark:text-primary-dark dark:outline-primary-dark"
                                       title="View details">
                                        Details
                                    </a>
                                    @if (User.IsInRole("Admin") || User.IsInRole("Librarian"))
                                    {
                                        <a asp-action="Edit" asp-route-id="@book.Id"
                                           class="text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@book.Id"
                                           class="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300">Delete</a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="p-6 text-center text-on-surface/60 dark:text-on-surface-dark/60">
                            No books found.
                            @(ViewBag.SearchTerm != null || ViewBag.CategoryId != null ? "Try different search criteria." : "")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


    <!-- Pagination -->
    @if (Model.Count > 0)
    {
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing
                        <span class="font-medium">@((Model.Page - 1) * Model.PageSize + 1)</span>
                        to
                        <span class="font-medium">@(Math.Min(Model.Page * Model.PageSize, Model.Count))</span>
                        of
                        <span class="font-medium">@Model.Count</span>
                        results
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        @{
                            var totalPages = (int)Math.Ceiling(Model.Count / (double)Model.PageSize);
                            var startPage = Math.Max(1, Model.Page - 2);
                            var endPage = Math.Min(totalPages, startPage + 4);
                            startPage = Math.Max(1, endPage - 4);
                            
                            var routeData = new Dictionary<string, string>();
                            if (ViewBag.SearchTerm != null) routeData["SearchTerm"] = ViewBag.SearchTerm;
                            if (ViewBag.CategoryId != null) routeData["CategoryId"] = ViewBag.CategoryId.ToString();
                        }
                        
                        @if (Model.Page > 1)
                        {
                            routeData["Page"] = (Model.Page - 1).ToString();
                            <a asp-action="Index" asp-all-route-data="@routeData"
                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            if (i == Model.Page)
                            {
                                <span aria-current="page"
                                     class="relative inline-flex items-center px-4 py-2 border border-indigo-500 bg-indigo-50 text-sm font-medium text-indigo-600">
                                    @i
                                </span>
                            }
                            else
                            {
                                routeData["Page"] = i.ToString();
                                <a asp-action="Index" asp-all-route-data="@routeData"
                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                                    @i
                                </a>
                            }
                        }

                        @if (Model.Page < totalPages)
                        {
                            routeData["Page"] = (Model.Page + 1).ToString();
                            <a asp-action="Index" asp-all-route-data="@routeData"
                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </span>
                        }
                    </nav>
                </div>
            </div>
        </div>
    }
</div>