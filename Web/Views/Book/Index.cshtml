@model Application.Common.PagedResult<Application.DTOs.BookDto>
@{
    ViewData["Title"] = "Books";
    var searchTerm = Context.Request.Query["searchTerm"].ToString();
    var categoryId = Context.Request.Query["categoryId"].ToString();
}

<div class="container mx-auto">
    <div class="bg-surface-alt dark:bg-surface-dark-alt border border-outline dark:border-outline-dark rounded-radius shadow-md overflow-hidden">
        <div class="bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark p-4">
            <div class="flex justify-between items-center">
                <h1 class="text-xl font-bold">Book Catalog</h1>
                @if (User.IsInRole("Librarian") || User.IsInRole("Admin"))
                {
                    <a asp-action="Create" class="rounded-radius bg-on-primary dark:bg-on-primary-dark text-primary dark:text-primary-dark px-4 py-2 text-sm font-medium hover:opacity-75">
                        Add New Book
                    </a>
                }
            </div>
        </div>
        
        <div class="p-6">
            <!-- Search and Filter Form -->
            <form method="get" class="mb-6">
                <div class="flex gap-4">
                    <div class="flex-1">
                        <input type="text" 
                               name="searchTerm" 
                               value="@searchTerm" 
                               placeholder="Search by title, author, or ISBN..."
                               class="w-full rounded-radius border border-outline dark:border-outline-dark px-4 py-2 focus:border-primary dark:focus:border-primary-dark focus:outline-none bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong" />
                    </div>
                    <button type="submit" class="rounded-radius bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark px-6 py-2 text-sm font-medium hover:opacity-75">
                        Search
                    </button>
                    @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(categoryId))
                    {
                        <a asp-action="Index" class="rounded-radius border border-outline dark:border-outline-dark px-6 py-2 text-sm font-medium hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">
                            Clear
                        </a>
                    }
                </div>
            </form>

            <!-- Results Summary -->
            @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(categoryId))
            {
                <div class="mb-4 text-on-surface dark:text-on-surface-dark">
                    @if (!string.IsNullOrEmpty(searchTerm) && !string.IsNullOrEmpty(categoryId))
                    {
                        <p>Search results for "<strong>@searchTerm</strong>" in selected category: @Model.TotalCount book(s) found</p>
                    }
                    else if (!string.IsNullOrEmpty(searchTerm))
                    {
                        <p>Search results for "<strong>@searchTerm</strong>": @Model.TotalCount book(s) found</p>
                    }
                    else if (!string.IsNullOrEmpty(categoryId))
                    {
                        <p>Books in selected category: @Model.TotalCount book(s) found</p>
                    }
                </div>
            }

            <!-- Books Grid -->
            @if (Model.Items.Any())
            {
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    @foreach (var book in Model.Items)
                    {
                        <div class="bg-surface dark:bg-surface-dark border border-outline dark:border-outline-dark rounded-radius shadow-sm hover:shadow-md transition-shadow">
                            <!-- Book Cover -->
                            <div class="aspect-[3/4] bg-surface-alt dark:bg-surface-dark-alt rounded-t-radius overflow-hidden">
                                @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                {
                                    <img src="@book.CoverImageUrl" alt="@book.Title" class="w-full h-full object-cover" />
                                }
                                else
                                {
                                    <div class="w-full h-full flex items-center justify-center">
                                        <svg class="w-16 h-16 text-on-surface dark:text-on-surface-dark opacity-30" fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                        </svg>
                                    </div>
                                }
                            </div>
                            
                            <!-- Book Info -->
                            <div class="p-4">
                                <h3 class="font-semibold text-on-surface-strong dark:text-on-surface-dark-strong mb-2 line-clamp-2">
                                    <a asp-action="Details" asp-route-id="@book.Id" class="hover:text-primary dark:hover:text-primary-dark">
                                        @book.Title
                                    </a>
                                </h3>
                                <p class="text-sm text-on-surface dark:text-on-surface-dark mb-2">by @book.Author</p>
                                
                                @if (!string.IsNullOrEmpty(book.ISBN))
                                {
                                    <p class="text-xs text-on-surface dark:text-on-surface-dark mb-2">ISBN: @book.ISBN</p>
                                }
                                
                                <!-- Categories -->
                                @if (book.Categories.Any())
                                {
                                    <div class="mb-3">
                                        <div class="flex flex-wrap gap-1">
                                            @foreach (var category in book.Categories.Take(3))
                                            {
                                                <span class="text-xs bg-primary/10 dark:bg-primary-dark/10 text-primary dark:text-primary-dark px-2 py-1 rounded-full">
                                                    @category
                                                </span>
                                            }
                                            @if (book.Categories.Count > 3)
                                            {
                                                <span class="text-xs text-on-surface dark:text-on-surface-dark">+@(book.Categories.Count - 3) more</span>
                                            }
                                        </div>
                                    </div>
                                }
                                
                                <!-- Availability -->
                                <div class="flex justify-between items-center mb-3">
                                    <div class="text-sm">
                                        <span class="text-on-surface dark:text-on-surface-dark">Available:</span>
                                        <span class="font-medium @(book.AvailableCopiesCount > 0 ? "text-green-600 dark:text-green-400" : "text-red-600 dark:text-red-400")">
                                            @book.AvailableCopiesCount of @book.CopiesCount
                                        </span>
                                    </div>
                                    <span class="text-xs px-2 py-1 rounded-full @(book.Status == Domain.Enums.BookStatus.Available ? "bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-400" : "bg-red-100 dark:bg-red-900/20 text-red-800 dark:text-red-400")">
                                        @book.Status
                                    </span>
                                </div>
                                
                                <!-- Actions -->
                                <div class="flex gap-2">
                                    <a asp-action="Details" asp-route-id="@book.Id" 
                                       class="flex-1 text-center rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-sm font-medium hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">
                                        Details
                                    </a>
                                    @if ((User.IsInRole("Librarian") || User.IsInRole("Admin")) && book.AvailableCopiesCount > 0)
                                    {
                                        <a asp-action="Edit" asp-route-id="@book.Id" 
                                           class="text-center rounded-radius bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark px-3 py-2 text-sm font-medium hover:opacity-75">
                                            Edit
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="mt-8 flex justify-center">
                        <nav class="flex items-center gap-2">
                            @if (Model.PageNumber > 1)
                            {
                                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-searchTerm="@searchTerm" asp-route-categoryId="@categoryId"
                                   class="rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-sm font-medium hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">
                                    Previous
                                </a>
                            }
                            
                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                            {
                                <a asp-action="Index" asp-route-pageNumber="@i" asp-route-searchTerm="@searchTerm" asp-route-categoryId="@categoryId"
                                   class="rounded-radius px-3 py-2 text-sm font-medium @(i == Model.PageNumber ? "bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark" : "border border-outline dark:border-outline-dark hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong")">
                                    @i
                                </a>
                            }
                            
                            @if (Model.PageNumber < Model.TotalPages)
                            {
                                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-searchTerm="@searchTerm" asp-route-categoryId="@categoryId"
                                   class="rounded-radius border border-outline dark:border-outline-dark px-3 py-2 text-sm font-medium hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">
                                    Next
                                </a>
                            }
                        </nav>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-12">
                    <svg class="mx-auto h-12 w-12 text-on-surface dark:text-on-surface-dark opacity-30" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                    </svg>
                    <h3 class="mt-2 text-sm font-medium text-on-surface-strong dark:text-on-surface-dark-strong">No books found</h3>
                    <p class="mt-1 text-sm text-on-surface dark:text-on-surface-dark">
                        @if (!string.IsNullOrEmpty(searchTerm))
                        {
                            <span>No books match your search criteria. Try different keywords.</span>
                        }
                        else
                        {
                            <span>The library catalog is empty.</span>
                        }
                    </p>
                    @if (User.IsInRole("Librarian") || User.IsInRole("Admin"))
                    {
                        <div class="mt-6">
                            <a asp-action="Create" class="rounded-radius bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark px-4 py-2 text-sm font-medium hover:opacity-75">
                                Add First Book
                            </a>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div> 