@model Application.DTOs.UpdateBookDto
@{
    ViewData["Title"] = "Edit Book";
    var categories = ViewBag.Categories as List<Application.DTOs.CategoryDto> ?? new List<Application.DTOs.CategoryDto>();
}

<div class="container mx-auto">
    <div class="bg-surface-alt dark:bg-surface-dark-alt border border-outline dark:border-outline-dark rounded-radius shadow-md overflow-hidden">
        <div class="bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark p-4">
            <h1 class="text-xl font-bold">Edit Book</h1>
        </div>
        <div class="p-6">
            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Left Column -->
                    <div>
                        <div class="mb-4">
                            <label asp-for="Title" class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Title</label>
                            <input asp-for="Title" class="w-full rounded-radius border border-outline dark:border-outline-dark px-4 py-2 focus:border-primary dark:focus:border-primary-dark focus:outline-none bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong" />
                            <span asp-validation-for="Title" class="text-danger text-sm"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Author" class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Author</label>
                            <input asp-for="Author" class="w-full rounded-radius border border-outline dark:border-outline-dark px-4 py-2 focus:border-primary dark:focus:border-primary-dark focus:outline-none bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong" />
                            <span asp-validation-for="Author" class="text-danger text-sm"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Publisher" class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Publisher</label>
                            <input asp-for="Publisher" class="w-full rounded-radius border border-outline dark:border-outline-dark px-4 py-2 focus:border-primary dark:focus:border-primary-dark focus:outline-none bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong" />
                            <span asp-validation-for="Publisher" class="text-danger text-sm"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="PublicationDate" class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Publication Date</label>
                            <input asp-for="PublicationDate" type="date" class="w-full rounded-radius border border-outline dark:border-outline-dark px-4 py-2 focus:border-primary dark:focus:border-primary-dark focus:outline-none bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong" />
                            <span asp-validation-for="PublicationDate" class="text-danger text-sm"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Status" class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Status</label>
                            <select asp-for="Status" asp-items="Html.GetEnumSelectList<Domain.Enums.BookStatus>()" class="w-full rounded-radius border border-outline dark:border-outline-dark px-4 py-2 focus:border-primary dark:focus:border-primary-dark focus:outline-none bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong">
                            </select>
                            <span asp-validation-for="Status" class="text-danger text-sm"></span>
                        </div>
                    </div>

                    <!-- Right Column -->
                    <div>
                        <div class="mb-4">
                            <label asp-for="Description" class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Description</label>
                            <textarea asp-for="Description" rows="4" class="w-full rounded-radius border border-outline dark:border-outline-dark px-4 py-2 focus:border-primary dark:focus:border-primary-dark focus:outline-none bg-surface dark:bg-surface-dark text-on-surface-strong dark:text-on-surface-dark-strong"></textarea>
                            <span asp-validation-for="Description" class="text-danger text-sm"></span>
                        </div>

                        <div class="mb-4">
                            <label class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Categories</label>
                            <div class="grid grid-cols-1 gap-2 max-h-40 overflow-y-auto border border-outline dark:border-outline-dark rounded-radius p-2 bg-surface dark:bg-surface-dark">
                                @for (int i = 0; i < categories.Count; i++)
                                {
                                    var category = categories[i];
                                    <label class="flex items-center space-x-2 cursor-pointer hover:bg-surface-alt dark:hover:bg-surface-dark-alt p-2 rounded">
                                        <input type="checkbox" 
                                               name="CategoryIds" 
                                               value="@category.Id" 
                                               class="rounded border-outline dark:border-outline-dark text-primary focus:ring-primary" 
                                               @(Model.CategoryIds.Contains(category.Id) ? "checked" : "") />
                                        <span class="text-on-surface dark:text-on-surface-dark">@category.Name</span>
                                    </label>
                                }
                            </div>
                            @if (!categories.Any())
                            {
                                <p class="text-on-surface dark:text-on-surface-dark text-sm mt-1">No categories available. <a asp-controller="Category" asp-action="Create" class="text-primary hover:underline">Create one first</a>.</p>
                            }
                        </div>

                        <!-- Current Cover Image -->
                        @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                        {
                            <div class="mb-4">
                                <label class="block text-on-surface-strong dark:text-on-surface-dark-strong font-medium mb-1">Current Cover Image</label>
                                <div class="relative">
                                    <img src="@Model.CoverImageUrl" alt="Current cover" class="w-32 h-40 object-cover rounded-radius border border-outline dark:border-outline-dark" />
                                    <form asp-action="RemoveCoverImage" asp-route-id="@ViewContext.RouteData.Values["id"]" method="post" class="absolute top-0 right-0">
                                        <button type="submit" class="bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs hover:bg-red-600" 
                                                onclick="return confirm('Are you sure you want to remove the cover image?')">
                                            Ã—
                                        </button>
                                    </form>
                                </div>
                            </div>
                        }

                        <!-- File Upload Component -->
                        @{
                            ViewData["EntityName"] = "books";
                            ViewData["FieldName"] = "coverImageFile";
                            ViewData["UrlFieldName"] = "CoverImageUrl";
                            ViewData["CurrentImageUrl"] = Model.CoverImageUrl;
                        }
                        @await Html.PartialAsync("_FileUpload")
                    </div>
                </div>

                <div class="flex justify-between mt-6">
                    <a asp-action="Index" class="rounded-radius border border-outline dark:border-outline-dark px-4 py-2 text-sm font-medium hover:bg-surface-alt dark:hover:bg-surface-dark-alt text-on-surface-strong dark:text-on-surface-dark-strong">Back to List</a>
                    <input type="submit" value="Save Changes" class="rounded-radius bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark px-4 py-2 text-sm font-medium hover:opacity-75 cursor-pointer" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 