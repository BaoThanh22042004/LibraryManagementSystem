@using Application.Common
@using Application.DTOs
@using Domain.Enums
@model PagedResult<LoanDto>
@{
    ViewData["Title"] = "Loan Management";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Loan Management</h1>
        <div class="flex space-x-4">
            <a asp-action="Checkout" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                <i class="fas fa-plus mr-2"></i>Check Out Book
            </a>
            <a asp-action="Overdue" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
                <i class="fas fa-exclamation-triangle mr-2"></i>Overdue Loans
            </a>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-6">
        <form method="get" class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
                <label for="memberId" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Member ID</label>
                <input type="number" id="memberId" name="memberId" value="@Context.Request.Query["memberId"]" 
                       class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                       placeholder="Filter by member ID">
            </div>
            <div>
                <label for="pageSize" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Items per page</label>
                <select id="pageSize" name="pageSize" 
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                    <option value="10" selected="@(Model.PageSize == 10)">10</option>
                    <option value="25" selected="@(Model.PageSize == 25)">25</option>
                    <option value="50" selected="@(Model.PageSize == 50)">50</option>
                </select>
            </div>
            <div class="flex items-end">
                <button type="submit" class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded mr-2">
                    <i class="fas fa-search mr-2"></i>Search
                </button>
                <a asp-action="Index" class="bg-gray-400 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded">
                    <i class="fas fa-times mr-2"></i>Clear
                </a>
            </div>
        </form>
    </div>

    <!-- Loan Statistics -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-blue-100 dark:bg-blue-900">
                    <i class="fas fa-book text-blue-600 dark:text-blue-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Total Loans</p>
                    <p class="text-2xl font-semibold text-gray-900 dark:text-white">@Model.TotalCount</p>
                </div>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-green-100 dark:bg-green-900">
                    <i class="fas fa-check-circle text-green-600 dark:text-green-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Active Loans</p>
                    <p class="text-2xl font-semibold text-gray-900 dark:text-white">@Model.Items.Count(l => l.Status == LoanStatus.Active)</p>
                </div>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-red-100 dark:bg-red-900">
                    <i class="fas fa-exclamation-triangle text-red-600 dark:text-red-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Overdue Loans</p>
                    <p class="text-2xl font-semibold text-gray-900 dark:text-white">@Model.Items.Count(l => l.Status == LoanStatus.Overdue)</p>
                </div>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-gray-100 dark:bg-gray-700">
                    <i class="fas fa-undo text-gray-600 dark:text-gray-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Returned Loans</p>
                    <p class="text-2xl font-semibold text-gray-900 dark:text-white">@Model.Items.Count(l => l.Status == LoanStatus.Returned)</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Loans Table -->
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
            <h2 class="text-lg font-semibold text-gray-900 dark:text-white">Loan Records</h2>
        </div>
        
        @if (!Model.Items.Any())
        {
            <div class="px-6 py-8 text-center">
                <i class="fas fa-inbox text-gray-400 text-4xl mb-4"></i>
                <p class="text-gray-500 dark:text-gray-400">No loans found matching your criteria.</p>
            </div>
        }
        else
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                    <thead class="bg-gray-50 dark:bg-gray-700">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Loan ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Member</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Book</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Loan Date</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Due Date</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                        @foreach (var loan in Model.Items)
                        {
                            <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                                    #@loan.Id
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
                                    @(loan.Member?.User?.FullName ?? $"Member #{loan.MemberId}")
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
                                    @(loan.BookCopy?.Book?.Title ?? "Unknown Book")
                                    <span class="text-gray-500 dark:text-gray-400">(Copy #@(loan.BookCopy?.CopyNumber ?? "N/A"))</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
                                    @loan.LoanDate.ToString("yyyy-MM-dd")
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
                                    @loan.DueDate.ToString("yyyy-MM-dd")
                                    @if (loan.Status == LoanStatus.Active && loan.DueDate < DateTime.Now)
                                    {
                                        <span class="ml-2 text-red-600 dark:text-red-400 font-medium">
                                            (@((DateTime.Now - loan.DueDate).Days) days overdue)
                                        </span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @switch (loan.Status)
                                    {
                                        case LoanStatus.Active:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">
                                                <i class="fas fa-check-circle mr-1"></i>Active
                                            </span>
                                            break;
                                        case LoanStatus.Overdue:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">
                                                <i class="fas fa-exclamation-triangle mr-1"></i>Overdue
                                            </span>
                                            break;
                                        case LoanStatus.Returned:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200">
                                                <i class="fas fa-undo mr-1"></i>Returned
                                            </span>
                                            break;
                                        default:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200">
                                                @loan.Status
                                            </span>
                                            break;
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <a asp-action="Details" asp-route-id="@loan.Id" 
                                           class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        @if (loan.Status == LoanStatus.Active)
                                        {
                                            <a asp-action="Extend" asp-route-id="@loan.Id" 
                                               class="text-yellow-600 hover:text-yellow-900 dark:text-yellow-400 dark:hover:text-yellow-300">
                                                <i class="fas fa-calendar-plus"></i>
                                            </a>
                                            <form asp-action="Return" method="post" class="inline" 
                                                  onsubmit="return confirm('Are you sure you want to return this book?');">
                                                <input type="hidden" name="id" value="@loan.Id" />
                                                <button type="submit" class="text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="mt-6 flex items-center justify-between">
            <div class="text-sm text-gray-700 dark:text-gray-300">
                Showing @((Model.PageNumber - 1) * Model.PageSize + 1) to @Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount) of @Model.TotalCount results
            </div>
            <div class="flex space-x-2">
                @if (Model.PageNumber > 1)
                {
                    <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize" 
                       asp-route-memberId="@Context.Request.Query["memberId"]"
                       class="bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700 px-3 py-2 rounded-md text-sm font-medium">
                        Previous
                    </a>
                }
                
                @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                {
                    <a asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" 
                       asp-route-memberId="@Context.Request.Query["memberId"]"
                       class="@(i == Model.PageNumber ? "bg-blue-600 text-white" : "bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700") px-3 py-2 rounded-md text-sm font-medium">
                        @i
                    </a>
                }
                
                @if (Model.PageNumber < Model.TotalPages)
                {
                    <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize" 
                       asp-route-memberId="@Context.Request.Query["memberId"]"
                       class="bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700 px-3 py-2 rounded-md text-sm font-medium">
                        Next
                    </a>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Auto-submit form when page size changes
        document.getElementById('pageSize').addEventListener('change', function() {
            this.form.submit();
        });
    </script>
} 