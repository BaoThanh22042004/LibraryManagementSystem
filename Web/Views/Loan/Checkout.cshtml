@model Application.DTOs.CreateLoanDto
@{
    ViewData["Title"] = "Check Out Book";
}

<div class="container mx-auto px-4 py-8">
    <div class="max-w-2xl mx-auto">
        <div class="flex items-center mb-6">
            <a asp-action="Index" class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 mr-4">
                <i class="fas fa-arrow-left"></i> Back to Loans
            </a>
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Check Out Book</h1>
        </div>

        <!-- UC018: Check Out Form -->
        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
            <div class="mb-6">
                <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Loan Information</h2>
                <p class="text-gray-600 dark:text-gray-400">Create a new loan for a library member. The system will validate member eligibility and book availability.</p>
            </div>

            <form asp-action="Checkout" method="post" id="checkoutForm">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Member Selection -->
                    <div>
                        <label asp-for="MemberId" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Member <span class="text-red-500">*</span>
                        </label>
                        <div class="relative">
                            <input asp-for="MemberId" type="number" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                                   placeholder="Enter member ID" 
                                   required />
                            <button type="button" onclick="searchMember()" 
                                    class="absolute right-2 top-2 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <span asp-validation-for="MemberId" class="text-red-500 text-sm"></span>
                        <div id="memberInfo" class="mt-2 p-3 bg-gray-50 dark:bg-gray-700 rounded-md hidden">
                            <p class="text-sm text-gray-600 dark:text-gray-400" id="memberDetails"></p>
                        </div>
                    </div>

                    <!-- Book Copy Selection -->
                    <div>
                        <label asp-for="BookCopyId" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Book Copy <span class="text-red-500">*</span>
                        </label>
                        <div class="relative">
                            <input asp-for="BookCopyId" type="number" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                                   placeholder="Enter book copy ID" 
                                   required />
                            <button type="button" onclick="searchBookCopy()" 
                                    class="absolute right-2 top-2 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <span asp-validation-for="BookCopyId" class="text-red-500 text-sm"></span>
                        <div id="bookCopyInfo" class="mt-2 p-3 bg-gray-50 dark:bg-gray-700 rounded-md hidden">
                            <p class="text-sm text-gray-600 dark:text-gray-400" id="bookCopyDetails"></p>
                        </div>
                    </div>

                    <!-- Custom Due Date (UC018.1: Custom Due Date) -->
                    <div class="md:col-span-2">
                        <label asp-for="CustomDueDate" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Custom Due Date (Optional)
                        </label>
                        <input asp-for="CustomDueDate" type="date" 
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                               min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                        <span asp-validation-for="CustomDueDate" class="text-red-500 text-sm"></span>
                        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">
                            Leave empty to use default loan period (14 days). Custom dates must be in the future.
                        </p>
                    </div>
                </div>

                <!-- Eligibility Check Results -->
                <div id="eligibilityCheck" class="mt-6 p-4 rounded-md hidden">
                    <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">Member Eligibility Check</h3>
                    <div id="eligibilityResults"></div>
                </div>

                <!-- Form Actions -->
                <div class="mt-8 flex justify-end space-x-4">
                    <a asp-action="Index" 
                       class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">
                        Cancel
                    </a>
                    <button type="submit" 
                            class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        <i class="fas fa-check mr-2"></i>Check Out Book
                    </button>
                </div>
            </form>
        </div>

        <!-- UC018 Business Rules Information -->
        <div class="mt-6 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
            <h3 class="text-lg font-medium text-blue-900 dark:text-blue-100 mb-2">
                <i class="fas fa-info-circle mr-2"></i>Check Out Requirements
            </h3>
            <ul class="text-sm text-blue-800 dark:text-blue-200 space-y-1">
                <li>• Member must have active membership status</li>
                <li>• Member must not have excessive outstanding fines (>$10.00)</li>
                <li>• Member must not exceed maximum active loans (5)</li>
                <li>• Book copy must be available for borrowing</li>
                <li>• Standard loan period is 14 days unless custom date specified</li>
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search member by ID
        function searchMember() {
            const memberId = document.getElementById('MemberId').value;
            if (!memberId) {
                alert('Please enter a member ID');
                return;
            }

            fetch(`/Loan/CheckEligibility?memberId=${memberId}`)
                .then(response => response.json())
                .then(data => {
                    const memberInfo = document.getElementById('memberInfo');
                    const memberDetails = document.getElementById('memberDetails');
                    const eligibilityCheck = document.getElementById('eligibilityCheck');
                    const eligibilityResults = document.getElementById('eligibilityResults');

                    if (data.isSuccess && data.value) {
                        const member = data.value;
                        memberDetails.innerHTML = `
                            <strong>${member.user?.fullName || 'Unknown'}</strong><br>
                            Email: ${member.user?.email || 'N/A'}<br>
                            Status: <span class="font-medium ${member.membershipStatus === 'Active' ? 'text-green-600' : 'text-red-600'}">${member.membershipStatus}</span><br>
                            Outstanding Fines: $${member.outstandingFines?.toFixed(2) || '0.00'}
                        `;
                        memberInfo.classList.remove('hidden');

                        // Show eligibility results
                        eligibilityCheck.classList.remove('hidden');
                        eligibilityResults.innerHTML = `
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div class="p-3 rounded-md ${member.isEligible ? 'bg-green-100 dark:bg-green-900' : 'bg-red-100 dark:bg-red-900'}">
                                    <p class="font-medium ${member.isEligible ? 'text-green-800 dark:text-green-200' : 'text-red-800 dark:text-red-200'}">
                                        ${member.isEligible ? '✓ Eligible for borrowing' : '✗ Not eligible for borrowing'}
                                    </p>
                                    <p class="text-sm ${member.isEligible ? 'text-green-700 dark:text-green-300' : 'text-red-700 dark:text-red-300'}">
                                        Available loan slots: ${member.availableLoanSlots}
                                    </p>
                                </div>
                                <div class="p-3 rounded-md bg-gray-100 dark:bg-gray-700">
                                    <p class="font-medium text-gray-800 dark:text-gray-200">Reasons:</p>
                                    <ul class="text-sm text-gray-600 dark:text-gray-400">
                                        ${member.reasons?.map(reason => `<li>• ${reason}</li>`).join('') || '<li>• No issues found</li>'}
                                    </ul>
                                </div>
                            </div>
                        `;
                    } else {
                        memberInfo.classList.add('hidden');
                        eligibilityCheck.classList.add('hidden');
                        alert('Member not found or error occurred');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error checking member eligibility');
                });
        }

        // Search book copy by ID
        function searchBookCopy() {
            const bookCopyId = document.getElementById('BookCopyId').value;
            if (!bookCopyId) {
                alert('Please enter a book copy ID');
                return;
            }

            // This would typically call an API endpoint to get book copy details
            // For now, we'll show a placeholder
            const bookCopyInfo = document.getElementById('bookCopyInfo');
            const bookCopyDetails = document.getElementById('bookCopyDetails');
            
            bookCopyDetails.innerHTML = `
                <strong>Book Copy #${bookCopyId}</strong><br>
                Status: <span class="font-medium text-green-600">Available</span><br>
                <em>Note: Actual book details would be loaded from the server</em>
            `;
            bookCopyInfo.classList.remove('hidden');
        }

        // Form validation
        document.getElementById('checkoutForm').addEventListener('submit', function(e) {
            const memberId = document.getElementById('MemberId').value;
            const bookCopyId = document.getElementById('BookCopyId').value;
            const customDueDate = document.getElementById('CustomDueDate').value;

            if (!memberId || !bookCopyId) {
                e.preventDefault();
                alert('Please fill in all required fields');
                return;
            }

            if (customDueDate && new Date(customDueDate) <= new Date()) {
                e.preventDefault();
                alert('Custom due date must be in the future');
                return;
            }
        });
    </script>
} 